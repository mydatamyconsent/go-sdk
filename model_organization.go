/*
My Data My Consent - Developer API

Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: v1
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mydatamyconsent

import (
	"encoding/json"
	"time"
)

// Organization struct for Organization
type Organization struct {
	CreatedBy *string `json:"createdBy,omitempty"`
	CreatedAtUtc *time.Time `json:"createdAtUtc,omitempty"`
	UpdatedBy NullableString `json:"updatedBy,omitempty"`
	UpdatedAtUtc NullableTime `json:"updatedAtUtc,omitempty"`
	CreatedByUser *ApplicationUser `json:"createdByUser,omitempty"`
	UpdatedByUser *ApplicationUser `json:"updatedByUser,omitempty"`
	DeletedBy NullableString `json:"deletedBy,omitempty"`
	DeletedAtUtc NullableTime `json:"deletedAtUtc,omitempty"`
	DeletedByUser *ApplicationUser `json:"deletedByUser,omitempty"`
	Id *string `json:"id,omitempty"`
	DataPartnerId NullableString `json:"dataPartnerId,omitempty"`
	TypeId *string `json:"typeId,omitempty"`
	CategoryId *string `json:"categoryId,omitempty"`
	DocumentProviderCategoryId NullableString `json:"documentProviderCategoryId,omitempty"`
	Name NullableString `json:"name,omitempty"`
	RegulatorName NullableString `json:"regulatorName,omitempty"`
	BrandName NullableString `json:"brandName,omitempty"`
	AuthorizedPersonnelTaxId NullableString `json:"authorizedPersonnelTaxId,omitempty"`
	AuthorizedPersonnelName NullableString `json:"authorizedPersonnelName,omitempty"`
	RegistrationId NullableString `json:"registrationId,omitempty"`
	VatId NullableString `json:"vatId,omitempty"`
	TaxId NullableString `json:"taxId,omitempty"`
	Description NullableString `json:"description,omitempty"`
	LogoUrl NullableString `json:"logoUrl,omitempty"`
	ContactEmail NullableString `json:"contactEmail,omitempty"`
	PhoneNumber NullableString `json:"phoneNumber,omitempty"`
	CountryId *string `json:"countryId,omitempty"`
	StateId *string `json:"stateId,omitempty"`
	Status *OrganizationStatus `json:"status,omitempty"`
	CompanyCode NullableString `json:"companyCode,omitempty"`
	PrivacyPolicyUrl NullableString `json:"privacyPolicyUrl,omitempty"`
	TermsOfServiceUrl NullableString `json:"termsOfServiceUrl,omitempty"`
	WebsiteUrl NullableString `json:"websiteUrl,omitempty"`
	IsGovernmentOrganization *bool `json:"isGovernmentOrganization,omitempty"`
	DlApiKey NullableString `json:"dlApiKey,omitempty"`
	IsKyoCompleted *bool `json:"isKyoCompleted,omitempty"`
	IsEnabled *bool `json:"isEnabled,omitempty"`
	IsDataProvider *bool `json:"isDataProvider,omitempty"`
	IsDataConsumer *bool `json:"isDataConsumer,omitempty"`
	SubmittedAtUtc NullableTime `json:"submittedAtUtc,omitempty"`
	ApprovedBy NullableString `json:"approvedBy,omitempty"`
	ApprovedAtUtc NullableTime `json:"approvedAtUtc,omitempty"`
	IsDigiLockerOrganization *bool `json:"isDigiLockerOrganization,omitempty"`
	IsMdmcMaintained *bool `json:"isMdmcMaintained,omitempty"`
	IsBbps *bool `json:"isBbps,omitempty"`
	MetaData *OrganizationMetaData `json:"metaData,omitempty"`
	CountryCode NullableString `json:"countryCode,omitempty"`
	OrganizationType *OrganizationType `json:"organizationType,omitempty"`
	OrganizationCategory *OrganizationCategory `json:"organizationCategory,omitempty"`
	DocumentProviderCategory *DocumentProviderCategory `json:"documentProviderCategory,omitempty"`
	Addresses []OrganizationAddress `json:"addresses,omitempty"`
	FinancialAccounts []OrganizationFinancialAccount `json:"financialAccounts,omitempty"`
	CountryState *Country `json:"countryState,omitempty"`
	ApprovedByUser *ApplicationUser `json:"approvedByUser,omitempty"`
	KyoDocuments []OrganizationKyoDocument `json:"kyoDocuments,omitempty"`
	IsDelete *bool `json:"isDelete,omitempty"`
	RecoveryToken NullableString `json:"recoveryToken,omitempty"`
}

// NewOrganization instantiates a new Organization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganization() *Organization {
	this := Organization{}
	return &this
}

// NewOrganizationWithDefaults instantiates a new Organization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationWithDefaults() *Organization {
	this := Organization{}
	return &this
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Organization) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Organization) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Organization) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedAtUtc returns the CreatedAtUtc field value if set, zero value otherwise.
func (o *Organization) GetCreatedAtUtc() time.Time {
	if o == nil || o.CreatedAtUtc == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtUtc
}

// GetCreatedAtUtcOk returns a tuple with the CreatedAtUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCreatedAtUtcOk() (*time.Time, bool) {
	if o == nil || o.CreatedAtUtc == nil {
		return nil, false
	}
	return o.CreatedAtUtc, true
}

// HasCreatedAtUtc returns a boolean if a field has been set.
func (o *Organization) HasCreatedAtUtc() bool {
	if o != nil && o.CreatedAtUtc != nil {
		return true
	}

	return false
}

// SetCreatedAtUtc gets a reference to the given time.Time and assigns it to the CreatedAtUtc field.
func (o *Organization) SetCreatedAtUtc(v time.Time) {
	o.CreatedAtUtc = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetUpdatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *Organization) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *Organization) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}
// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *Organization) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *Organization) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetUpdatedAtUtc returns the UpdatedAtUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetUpdatedAtUtc() time.Time {
	if o == nil || o.UpdatedAtUtc.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtUtc.Get()
}

// GetUpdatedAtUtcOk returns a tuple with the UpdatedAtUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetUpdatedAtUtcOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAtUtc.Get(), o.UpdatedAtUtc.IsSet()
}

// HasUpdatedAtUtc returns a boolean if a field has been set.
func (o *Organization) HasUpdatedAtUtc() bool {
	if o != nil && o.UpdatedAtUtc.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtUtc gets a reference to the given NullableTime and assigns it to the UpdatedAtUtc field.
func (o *Organization) SetUpdatedAtUtc(v time.Time) {
	o.UpdatedAtUtc.Set(&v)
}
// SetUpdatedAtUtcNil sets the value for UpdatedAtUtc to be an explicit nil
func (o *Organization) SetUpdatedAtUtcNil() {
	o.UpdatedAtUtc.Set(nil)
}

// UnsetUpdatedAtUtc ensures that no value is present for UpdatedAtUtc, not even an explicit nil
func (o *Organization) UnsetUpdatedAtUtc() {
	o.UpdatedAtUtc.Unset()
}

// GetCreatedByUser returns the CreatedByUser field value if set, zero value otherwise.
func (o *Organization) GetCreatedByUser() ApplicationUser {
	if o == nil || o.CreatedByUser == nil {
		var ret ApplicationUser
		return ret
	}
	return *o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCreatedByUserOk() (*ApplicationUser, bool) {
	if o == nil || o.CreatedByUser == nil {
		return nil, false
	}
	return o.CreatedByUser, true
}

// HasCreatedByUser returns a boolean if a field has been set.
func (o *Organization) HasCreatedByUser() bool {
	if o != nil && o.CreatedByUser != nil {
		return true
	}

	return false
}

// SetCreatedByUser gets a reference to the given ApplicationUser and assigns it to the CreatedByUser field.
func (o *Organization) SetCreatedByUser(v ApplicationUser) {
	o.CreatedByUser = &v
}

// GetUpdatedByUser returns the UpdatedByUser field value if set, zero value otherwise.
func (o *Organization) GetUpdatedByUser() ApplicationUser {
	if o == nil || o.UpdatedByUser == nil {
		var ret ApplicationUser
		return ret
	}
	return *o.UpdatedByUser
}

// GetUpdatedByUserOk returns a tuple with the UpdatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetUpdatedByUserOk() (*ApplicationUser, bool) {
	if o == nil || o.UpdatedByUser == nil {
		return nil, false
	}
	return o.UpdatedByUser, true
}

// HasUpdatedByUser returns a boolean if a field has been set.
func (o *Organization) HasUpdatedByUser() bool {
	if o != nil && o.UpdatedByUser != nil {
		return true
	}

	return false
}

// SetUpdatedByUser gets a reference to the given ApplicationUser and assigns it to the UpdatedByUser field.
func (o *Organization) SetUpdatedByUser(v ApplicationUser) {
	o.UpdatedByUser = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetDeletedBy() string {
	if o == nil || o.DeletedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeletedBy.Get()
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetDeletedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedBy.Get(), o.DeletedBy.IsSet()
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *Organization) HasDeletedBy() bool {
	if o != nil && o.DeletedBy.IsSet() {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given NullableString and assigns it to the DeletedBy field.
func (o *Organization) SetDeletedBy(v string) {
	o.DeletedBy.Set(&v)
}
// SetDeletedByNil sets the value for DeletedBy to be an explicit nil
func (o *Organization) SetDeletedByNil() {
	o.DeletedBy.Set(nil)
}

// UnsetDeletedBy ensures that no value is present for DeletedBy, not even an explicit nil
func (o *Organization) UnsetDeletedBy() {
	o.DeletedBy.Unset()
}

// GetDeletedAtUtc returns the DeletedAtUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetDeletedAtUtc() time.Time {
	if o == nil || o.DeletedAtUtc.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedAtUtc.Get()
}

// GetDeletedAtUtcOk returns a tuple with the DeletedAtUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetDeletedAtUtcOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedAtUtc.Get(), o.DeletedAtUtc.IsSet()
}

// HasDeletedAtUtc returns a boolean if a field has been set.
func (o *Organization) HasDeletedAtUtc() bool {
	if o != nil && o.DeletedAtUtc.IsSet() {
		return true
	}

	return false
}

// SetDeletedAtUtc gets a reference to the given NullableTime and assigns it to the DeletedAtUtc field.
func (o *Organization) SetDeletedAtUtc(v time.Time) {
	o.DeletedAtUtc.Set(&v)
}
// SetDeletedAtUtcNil sets the value for DeletedAtUtc to be an explicit nil
func (o *Organization) SetDeletedAtUtcNil() {
	o.DeletedAtUtc.Set(nil)
}

// UnsetDeletedAtUtc ensures that no value is present for DeletedAtUtc, not even an explicit nil
func (o *Organization) UnsetDeletedAtUtc() {
	o.DeletedAtUtc.Unset()
}

// GetDeletedByUser returns the DeletedByUser field value if set, zero value otherwise.
func (o *Organization) GetDeletedByUser() ApplicationUser {
	if o == nil || o.DeletedByUser == nil {
		var ret ApplicationUser
		return ret
	}
	return *o.DeletedByUser
}

// GetDeletedByUserOk returns a tuple with the DeletedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetDeletedByUserOk() (*ApplicationUser, bool) {
	if o == nil || o.DeletedByUser == nil {
		return nil, false
	}
	return o.DeletedByUser, true
}

// HasDeletedByUser returns a boolean if a field has been set.
func (o *Organization) HasDeletedByUser() bool {
	if o != nil && o.DeletedByUser != nil {
		return true
	}

	return false
}

// SetDeletedByUser gets a reference to the given ApplicationUser and assigns it to the DeletedByUser field.
func (o *Organization) SetDeletedByUser(v ApplicationUser) {
	o.DeletedByUser = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Organization) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Organization) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Organization) SetId(v string) {
	o.Id = &v
}

// GetDataPartnerId returns the DataPartnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetDataPartnerId() string {
	if o == nil || o.DataPartnerId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DataPartnerId.Get()
}

// GetDataPartnerIdOk returns a tuple with the DataPartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetDataPartnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataPartnerId.Get(), o.DataPartnerId.IsSet()
}

// HasDataPartnerId returns a boolean if a field has been set.
func (o *Organization) HasDataPartnerId() bool {
	if o != nil && o.DataPartnerId.IsSet() {
		return true
	}

	return false
}

// SetDataPartnerId gets a reference to the given NullableString and assigns it to the DataPartnerId field.
func (o *Organization) SetDataPartnerId(v string) {
	o.DataPartnerId.Set(&v)
}
// SetDataPartnerIdNil sets the value for DataPartnerId to be an explicit nil
func (o *Organization) SetDataPartnerIdNil() {
	o.DataPartnerId.Set(nil)
}

// UnsetDataPartnerId ensures that no value is present for DataPartnerId, not even an explicit nil
func (o *Organization) UnsetDataPartnerId() {
	o.DataPartnerId.Unset()
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *Organization) GetTypeId() string {
	if o == nil || o.TypeId == nil {
		var ret string
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetTypeIdOk() (*string, bool) {
	if o == nil || o.TypeId == nil {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *Organization) HasTypeId() bool {
	if o != nil && o.TypeId != nil {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given string and assigns it to the TypeId field.
func (o *Organization) SetTypeId(v string) {
	o.TypeId = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *Organization) GetCategoryId() string {
	if o == nil || o.CategoryId == nil {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCategoryIdOk() (*string, bool) {
	if o == nil || o.CategoryId == nil {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *Organization) HasCategoryId() bool {
	if o != nil && o.CategoryId != nil {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *Organization) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetDocumentProviderCategoryId returns the DocumentProviderCategoryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetDocumentProviderCategoryId() string {
	if o == nil || o.DocumentProviderCategoryId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DocumentProviderCategoryId.Get()
}

// GetDocumentProviderCategoryIdOk returns a tuple with the DocumentProviderCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetDocumentProviderCategoryIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DocumentProviderCategoryId.Get(), o.DocumentProviderCategoryId.IsSet()
}

// HasDocumentProviderCategoryId returns a boolean if a field has been set.
func (o *Organization) HasDocumentProviderCategoryId() bool {
	if o != nil && o.DocumentProviderCategoryId.IsSet() {
		return true
	}

	return false
}

// SetDocumentProviderCategoryId gets a reference to the given NullableString and assigns it to the DocumentProviderCategoryId field.
func (o *Organization) SetDocumentProviderCategoryId(v string) {
	o.DocumentProviderCategoryId.Set(&v)
}
// SetDocumentProviderCategoryIdNil sets the value for DocumentProviderCategoryId to be an explicit nil
func (o *Organization) SetDocumentProviderCategoryIdNil() {
	o.DocumentProviderCategoryId.Set(nil)
}

// UnsetDocumentProviderCategoryId ensures that no value is present for DocumentProviderCategoryId, not even an explicit nil
func (o *Organization) UnsetDocumentProviderCategoryId() {
	o.DocumentProviderCategoryId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Organization) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Organization) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *Organization) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Organization) UnsetName() {
	o.Name.Unset()
}

// GetRegulatorName returns the RegulatorName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetRegulatorName() string {
	if o == nil || o.RegulatorName.Get() == nil {
		var ret string
		return ret
	}
	return *o.RegulatorName.Get()
}

// GetRegulatorNameOk returns a tuple with the RegulatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetRegulatorNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegulatorName.Get(), o.RegulatorName.IsSet()
}

// HasRegulatorName returns a boolean if a field has been set.
func (o *Organization) HasRegulatorName() bool {
	if o != nil && o.RegulatorName.IsSet() {
		return true
	}

	return false
}

// SetRegulatorName gets a reference to the given NullableString and assigns it to the RegulatorName field.
func (o *Organization) SetRegulatorName(v string) {
	o.RegulatorName.Set(&v)
}
// SetRegulatorNameNil sets the value for RegulatorName to be an explicit nil
func (o *Organization) SetRegulatorNameNil() {
	o.RegulatorName.Set(nil)
}

// UnsetRegulatorName ensures that no value is present for RegulatorName, not even an explicit nil
func (o *Organization) UnsetRegulatorName() {
	o.RegulatorName.Unset()
}

// GetBrandName returns the BrandName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetBrandName() string {
	if o == nil || o.BrandName.Get() == nil {
		var ret string
		return ret
	}
	return *o.BrandName.Get()
}

// GetBrandNameOk returns a tuple with the BrandName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetBrandNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BrandName.Get(), o.BrandName.IsSet()
}

// HasBrandName returns a boolean if a field has been set.
func (o *Organization) HasBrandName() bool {
	if o != nil && o.BrandName.IsSet() {
		return true
	}

	return false
}

// SetBrandName gets a reference to the given NullableString and assigns it to the BrandName field.
func (o *Organization) SetBrandName(v string) {
	o.BrandName.Set(&v)
}
// SetBrandNameNil sets the value for BrandName to be an explicit nil
func (o *Organization) SetBrandNameNil() {
	o.BrandName.Set(nil)
}

// UnsetBrandName ensures that no value is present for BrandName, not even an explicit nil
func (o *Organization) UnsetBrandName() {
	o.BrandName.Unset()
}

// GetAuthorizedPersonnelTaxId returns the AuthorizedPersonnelTaxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetAuthorizedPersonnelTaxId() string {
	if o == nil || o.AuthorizedPersonnelTaxId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AuthorizedPersonnelTaxId.Get()
}

// GetAuthorizedPersonnelTaxIdOk returns a tuple with the AuthorizedPersonnelTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetAuthorizedPersonnelTaxIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AuthorizedPersonnelTaxId.Get(), o.AuthorizedPersonnelTaxId.IsSet()
}

// HasAuthorizedPersonnelTaxId returns a boolean if a field has been set.
func (o *Organization) HasAuthorizedPersonnelTaxId() bool {
	if o != nil && o.AuthorizedPersonnelTaxId.IsSet() {
		return true
	}

	return false
}

// SetAuthorizedPersonnelTaxId gets a reference to the given NullableString and assigns it to the AuthorizedPersonnelTaxId field.
func (o *Organization) SetAuthorizedPersonnelTaxId(v string) {
	o.AuthorizedPersonnelTaxId.Set(&v)
}
// SetAuthorizedPersonnelTaxIdNil sets the value for AuthorizedPersonnelTaxId to be an explicit nil
func (o *Organization) SetAuthorizedPersonnelTaxIdNil() {
	o.AuthorizedPersonnelTaxId.Set(nil)
}

// UnsetAuthorizedPersonnelTaxId ensures that no value is present for AuthorizedPersonnelTaxId, not even an explicit nil
func (o *Organization) UnsetAuthorizedPersonnelTaxId() {
	o.AuthorizedPersonnelTaxId.Unset()
}

// GetAuthorizedPersonnelName returns the AuthorizedPersonnelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetAuthorizedPersonnelName() string {
	if o == nil || o.AuthorizedPersonnelName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AuthorizedPersonnelName.Get()
}

// GetAuthorizedPersonnelNameOk returns a tuple with the AuthorizedPersonnelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetAuthorizedPersonnelNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AuthorizedPersonnelName.Get(), o.AuthorizedPersonnelName.IsSet()
}

// HasAuthorizedPersonnelName returns a boolean if a field has been set.
func (o *Organization) HasAuthorizedPersonnelName() bool {
	if o != nil && o.AuthorizedPersonnelName.IsSet() {
		return true
	}

	return false
}

// SetAuthorizedPersonnelName gets a reference to the given NullableString and assigns it to the AuthorizedPersonnelName field.
func (o *Organization) SetAuthorizedPersonnelName(v string) {
	o.AuthorizedPersonnelName.Set(&v)
}
// SetAuthorizedPersonnelNameNil sets the value for AuthorizedPersonnelName to be an explicit nil
func (o *Organization) SetAuthorizedPersonnelNameNil() {
	o.AuthorizedPersonnelName.Set(nil)
}

// UnsetAuthorizedPersonnelName ensures that no value is present for AuthorizedPersonnelName, not even an explicit nil
func (o *Organization) UnsetAuthorizedPersonnelName() {
	o.AuthorizedPersonnelName.Unset()
}

// GetRegistrationId returns the RegistrationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetRegistrationId() string {
	if o == nil || o.RegistrationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RegistrationId.Get()
}

// GetRegistrationIdOk returns a tuple with the RegistrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetRegistrationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegistrationId.Get(), o.RegistrationId.IsSet()
}

// HasRegistrationId returns a boolean if a field has been set.
func (o *Organization) HasRegistrationId() bool {
	if o != nil && o.RegistrationId.IsSet() {
		return true
	}

	return false
}

// SetRegistrationId gets a reference to the given NullableString and assigns it to the RegistrationId field.
func (o *Organization) SetRegistrationId(v string) {
	o.RegistrationId.Set(&v)
}
// SetRegistrationIdNil sets the value for RegistrationId to be an explicit nil
func (o *Organization) SetRegistrationIdNil() {
	o.RegistrationId.Set(nil)
}

// UnsetRegistrationId ensures that no value is present for RegistrationId, not even an explicit nil
func (o *Organization) UnsetRegistrationId() {
	o.RegistrationId.Unset()
}

// GetVatId returns the VatId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetVatId() string {
	if o == nil || o.VatId.Get() == nil {
		var ret string
		return ret
	}
	return *o.VatId.Get()
}

// GetVatIdOk returns a tuple with the VatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetVatIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VatId.Get(), o.VatId.IsSet()
}

// HasVatId returns a boolean if a field has been set.
func (o *Organization) HasVatId() bool {
	if o != nil && o.VatId.IsSet() {
		return true
	}

	return false
}

// SetVatId gets a reference to the given NullableString and assigns it to the VatId field.
func (o *Organization) SetVatId(v string) {
	o.VatId.Set(&v)
}
// SetVatIdNil sets the value for VatId to be an explicit nil
func (o *Organization) SetVatIdNil() {
	o.VatId.Set(nil)
}

// UnsetVatId ensures that no value is present for VatId, not even an explicit nil
func (o *Organization) UnsetVatId() {
	o.VatId.Unset()
}

// GetTaxId returns the TaxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetTaxId() string {
	if o == nil || o.TaxId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TaxId.Get()
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetTaxIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaxId.Get(), o.TaxId.IsSet()
}

// HasTaxId returns a boolean if a field has been set.
func (o *Organization) HasTaxId() bool {
	if o != nil && o.TaxId.IsSet() {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given NullableString and assigns it to the TaxId field.
func (o *Organization) SetTaxId(v string) {
	o.TaxId.Set(&v)
}
// SetTaxIdNil sets the value for TaxId to be an explicit nil
func (o *Organization) SetTaxIdNil() {
	o.TaxId.Set(nil)
}

// UnsetTaxId ensures that no value is present for TaxId, not even an explicit nil
func (o *Organization) UnsetTaxId() {
	o.TaxId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Organization) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Organization) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Organization) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Organization) UnsetDescription() {
	o.Description.Unset()
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetLogoUrl() string {
	if o == nil || o.LogoUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl.Get()
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetLogoUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogoUrl.Get(), o.LogoUrl.IsSet()
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *Organization) HasLogoUrl() bool {
	if o != nil && o.LogoUrl.IsSet() {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given NullableString and assigns it to the LogoUrl field.
func (o *Organization) SetLogoUrl(v string) {
	o.LogoUrl.Set(&v)
}
// SetLogoUrlNil sets the value for LogoUrl to be an explicit nil
func (o *Organization) SetLogoUrlNil() {
	o.LogoUrl.Set(nil)
}

// UnsetLogoUrl ensures that no value is present for LogoUrl, not even an explicit nil
func (o *Organization) UnsetLogoUrl() {
	o.LogoUrl.Unset()
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetContactEmail() string {
	if o == nil || o.ContactEmail.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContactEmail.Get()
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetContactEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContactEmail.Get(), o.ContactEmail.IsSet()
}

// HasContactEmail returns a boolean if a field has been set.
func (o *Organization) HasContactEmail() bool {
	if o != nil && o.ContactEmail.IsSet() {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given NullableString and assigns it to the ContactEmail field.
func (o *Organization) SetContactEmail(v string) {
	o.ContactEmail.Set(&v)
}
// SetContactEmailNil sets the value for ContactEmail to be an explicit nil
func (o *Organization) SetContactEmailNil() {
	o.ContactEmail.Set(nil)
}

// UnsetContactEmail ensures that no value is present for ContactEmail, not even an explicit nil
func (o *Organization) UnsetContactEmail() {
	o.ContactEmail.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetPhoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Organization) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *Organization) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *Organization) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *Organization) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *Organization) GetCountryId() string {
	if o == nil || o.CountryId == nil {
		var ret string
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCountryIdOk() (*string, bool) {
	if o == nil || o.CountryId == nil {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *Organization) HasCountryId() bool {
	if o != nil && o.CountryId != nil {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given string and assigns it to the CountryId field.
func (o *Organization) SetCountryId(v string) {
	o.CountryId = &v
}

// GetStateId returns the StateId field value if set, zero value otherwise.
func (o *Organization) GetStateId() string {
	if o == nil || o.StateId == nil {
		var ret string
		return ret
	}
	return *o.StateId
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetStateIdOk() (*string, bool) {
	if o == nil || o.StateId == nil {
		return nil, false
	}
	return o.StateId, true
}

// HasStateId returns a boolean if a field has been set.
func (o *Organization) HasStateId() bool {
	if o != nil && o.StateId != nil {
		return true
	}

	return false
}

// SetStateId gets a reference to the given string and assigns it to the StateId field.
func (o *Organization) SetStateId(v string) {
	o.StateId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Organization) GetStatus() OrganizationStatus {
	if o == nil || o.Status == nil {
		var ret OrganizationStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetStatusOk() (*OrganizationStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Organization) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OrganizationStatus and assigns it to the Status field.
func (o *Organization) SetStatus(v OrganizationStatus) {
	o.Status = &v
}

// GetCompanyCode returns the CompanyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetCompanyCode() string {
	if o == nil || o.CompanyCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CompanyCode.Get()
}

// GetCompanyCodeOk returns a tuple with the CompanyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetCompanyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CompanyCode.Get(), o.CompanyCode.IsSet()
}

// HasCompanyCode returns a boolean if a field has been set.
func (o *Organization) HasCompanyCode() bool {
	if o != nil && o.CompanyCode.IsSet() {
		return true
	}

	return false
}

// SetCompanyCode gets a reference to the given NullableString and assigns it to the CompanyCode field.
func (o *Organization) SetCompanyCode(v string) {
	o.CompanyCode.Set(&v)
}
// SetCompanyCodeNil sets the value for CompanyCode to be an explicit nil
func (o *Organization) SetCompanyCodeNil() {
	o.CompanyCode.Set(nil)
}

// UnsetCompanyCode ensures that no value is present for CompanyCode, not even an explicit nil
func (o *Organization) UnsetCompanyCode() {
	o.CompanyCode.Unset()
}

// GetPrivacyPolicyUrl returns the PrivacyPolicyUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetPrivacyPolicyUrl() string {
	if o == nil || o.PrivacyPolicyUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrivacyPolicyUrl.Get()
}

// GetPrivacyPolicyUrlOk returns a tuple with the PrivacyPolicyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetPrivacyPolicyUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrivacyPolicyUrl.Get(), o.PrivacyPolicyUrl.IsSet()
}

// HasPrivacyPolicyUrl returns a boolean if a field has been set.
func (o *Organization) HasPrivacyPolicyUrl() bool {
	if o != nil && o.PrivacyPolicyUrl.IsSet() {
		return true
	}

	return false
}

// SetPrivacyPolicyUrl gets a reference to the given NullableString and assigns it to the PrivacyPolicyUrl field.
func (o *Organization) SetPrivacyPolicyUrl(v string) {
	o.PrivacyPolicyUrl.Set(&v)
}
// SetPrivacyPolicyUrlNil sets the value for PrivacyPolicyUrl to be an explicit nil
func (o *Organization) SetPrivacyPolicyUrlNil() {
	o.PrivacyPolicyUrl.Set(nil)
}

// UnsetPrivacyPolicyUrl ensures that no value is present for PrivacyPolicyUrl, not even an explicit nil
func (o *Organization) UnsetPrivacyPolicyUrl() {
	o.PrivacyPolicyUrl.Unset()
}

// GetTermsOfServiceUrl returns the TermsOfServiceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetTermsOfServiceUrl() string {
	if o == nil || o.TermsOfServiceUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.TermsOfServiceUrl.Get()
}

// GetTermsOfServiceUrlOk returns a tuple with the TermsOfServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetTermsOfServiceUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TermsOfServiceUrl.Get(), o.TermsOfServiceUrl.IsSet()
}

// HasTermsOfServiceUrl returns a boolean if a field has been set.
func (o *Organization) HasTermsOfServiceUrl() bool {
	if o != nil && o.TermsOfServiceUrl.IsSet() {
		return true
	}

	return false
}

// SetTermsOfServiceUrl gets a reference to the given NullableString and assigns it to the TermsOfServiceUrl field.
func (o *Organization) SetTermsOfServiceUrl(v string) {
	o.TermsOfServiceUrl.Set(&v)
}
// SetTermsOfServiceUrlNil sets the value for TermsOfServiceUrl to be an explicit nil
func (o *Organization) SetTermsOfServiceUrlNil() {
	o.TermsOfServiceUrl.Set(nil)
}

// UnsetTermsOfServiceUrl ensures that no value is present for TermsOfServiceUrl, not even an explicit nil
func (o *Organization) UnsetTermsOfServiceUrl() {
	o.TermsOfServiceUrl.Unset()
}

// GetWebsiteUrl returns the WebsiteUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetWebsiteUrl() string {
	if o == nil || o.WebsiteUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebsiteUrl.Get()
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetWebsiteUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebsiteUrl.Get(), o.WebsiteUrl.IsSet()
}

// HasWebsiteUrl returns a boolean if a field has been set.
func (o *Organization) HasWebsiteUrl() bool {
	if o != nil && o.WebsiteUrl.IsSet() {
		return true
	}

	return false
}

// SetWebsiteUrl gets a reference to the given NullableString and assigns it to the WebsiteUrl field.
func (o *Organization) SetWebsiteUrl(v string) {
	o.WebsiteUrl.Set(&v)
}
// SetWebsiteUrlNil sets the value for WebsiteUrl to be an explicit nil
func (o *Organization) SetWebsiteUrlNil() {
	o.WebsiteUrl.Set(nil)
}

// UnsetWebsiteUrl ensures that no value is present for WebsiteUrl, not even an explicit nil
func (o *Organization) UnsetWebsiteUrl() {
	o.WebsiteUrl.Unset()
}

// GetIsGovernmentOrganization returns the IsGovernmentOrganization field value if set, zero value otherwise.
func (o *Organization) GetIsGovernmentOrganization() bool {
	if o == nil || o.IsGovernmentOrganization == nil {
		var ret bool
		return ret
	}
	return *o.IsGovernmentOrganization
}

// GetIsGovernmentOrganizationOk returns a tuple with the IsGovernmentOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsGovernmentOrganizationOk() (*bool, bool) {
	if o == nil || o.IsGovernmentOrganization == nil {
		return nil, false
	}
	return o.IsGovernmentOrganization, true
}

// HasIsGovernmentOrganization returns a boolean if a field has been set.
func (o *Organization) HasIsGovernmentOrganization() bool {
	if o != nil && o.IsGovernmentOrganization != nil {
		return true
	}

	return false
}

// SetIsGovernmentOrganization gets a reference to the given bool and assigns it to the IsGovernmentOrganization field.
func (o *Organization) SetIsGovernmentOrganization(v bool) {
	o.IsGovernmentOrganization = &v
}

// GetDlApiKey returns the DlApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetDlApiKey() string {
	if o == nil || o.DlApiKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.DlApiKey.Get()
}

// GetDlApiKeyOk returns a tuple with the DlApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetDlApiKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DlApiKey.Get(), o.DlApiKey.IsSet()
}

// HasDlApiKey returns a boolean if a field has been set.
func (o *Organization) HasDlApiKey() bool {
	if o != nil && o.DlApiKey.IsSet() {
		return true
	}

	return false
}

// SetDlApiKey gets a reference to the given NullableString and assigns it to the DlApiKey field.
func (o *Organization) SetDlApiKey(v string) {
	o.DlApiKey.Set(&v)
}
// SetDlApiKeyNil sets the value for DlApiKey to be an explicit nil
func (o *Organization) SetDlApiKeyNil() {
	o.DlApiKey.Set(nil)
}

// UnsetDlApiKey ensures that no value is present for DlApiKey, not even an explicit nil
func (o *Organization) UnsetDlApiKey() {
	o.DlApiKey.Unset()
}

// GetIsKyoCompleted returns the IsKyoCompleted field value if set, zero value otherwise.
func (o *Organization) GetIsKyoCompleted() bool {
	if o == nil || o.IsKyoCompleted == nil {
		var ret bool
		return ret
	}
	return *o.IsKyoCompleted
}

// GetIsKyoCompletedOk returns a tuple with the IsKyoCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsKyoCompletedOk() (*bool, bool) {
	if o == nil || o.IsKyoCompleted == nil {
		return nil, false
	}
	return o.IsKyoCompleted, true
}

// HasIsKyoCompleted returns a boolean if a field has been set.
func (o *Organization) HasIsKyoCompleted() bool {
	if o != nil && o.IsKyoCompleted != nil {
		return true
	}

	return false
}

// SetIsKyoCompleted gets a reference to the given bool and assigns it to the IsKyoCompleted field.
func (o *Organization) SetIsKyoCompleted(v bool) {
	o.IsKyoCompleted = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *Organization) GetIsEnabled() bool {
	if o == nil || o.IsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsEnabledOk() (*bool, bool) {
	if o == nil || o.IsEnabled == nil {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *Organization) HasIsEnabled() bool {
	if o != nil && o.IsEnabled != nil {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *Organization) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetIsDataProvider returns the IsDataProvider field value if set, zero value otherwise.
func (o *Organization) GetIsDataProvider() bool {
	if o == nil || o.IsDataProvider == nil {
		var ret bool
		return ret
	}
	return *o.IsDataProvider
}

// GetIsDataProviderOk returns a tuple with the IsDataProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsDataProviderOk() (*bool, bool) {
	if o == nil || o.IsDataProvider == nil {
		return nil, false
	}
	return o.IsDataProvider, true
}

// HasIsDataProvider returns a boolean if a field has been set.
func (o *Organization) HasIsDataProvider() bool {
	if o != nil && o.IsDataProvider != nil {
		return true
	}

	return false
}

// SetIsDataProvider gets a reference to the given bool and assigns it to the IsDataProvider field.
func (o *Organization) SetIsDataProvider(v bool) {
	o.IsDataProvider = &v
}

// GetIsDataConsumer returns the IsDataConsumer field value if set, zero value otherwise.
func (o *Organization) GetIsDataConsumer() bool {
	if o == nil || o.IsDataConsumer == nil {
		var ret bool
		return ret
	}
	return *o.IsDataConsumer
}

// GetIsDataConsumerOk returns a tuple with the IsDataConsumer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsDataConsumerOk() (*bool, bool) {
	if o == nil || o.IsDataConsumer == nil {
		return nil, false
	}
	return o.IsDataConsumer, true
}

// HasIsDataConsumer returns a boolean if a field has been set.
func (o *Organization) HasIsDataConsumer() bool {
	if o != nil && o.IsDataConsumer != nil {
		return true
	}

	return false
}

// SetIsDataConsumer gets a reference to the given bool and assigns it to the IsDataConsumer field.
func (o *Organization) SetIsDataConsumer(v bool) {
	o.IsDataConsumer = &v
}

// GetSubmittedAtUtc returns the SubmittedAtUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetSubmittedAtUtc() time.Time {
	if o == nil || o.SubmittedAtUtc.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.SubmittedAtUtc.Get()
}

// GetSubmittedAtUtcOk returns a tuple with the SubmittedAtUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetSubmittedAtUtcOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubmittedAtUtc.Get(), o.SubmittedAtUtc.IsSet()
}

// HasSubmittedAtUtc returns a boolean if a field has been set.
func (o *Organization) HasSubmittedAtUtc() bool {
	if o != nil && o.SubmittedAtUtc.IsSet() {
		return true
	}

	return false
}

// SetSubmittedAtUtc gets a reference to the given NullableTime and assigns it to the SubmittedAtUtc field.
func (o *Organization) SetSubmittedAtUtc(v time.Time) {
	o.SubmittedAtUtc.Set(&v)
}
// SetSubmittedAtUtcNil sets the value for SubmittedAtUtc to be an explicit nil
func (o *Organization) SetSubmittedAtUtcNil() {
	o.SubmittedAtUtc.Set(nil)
}

// UnsetSubmittedAtUtc ensures that no value is present for SubmittedAtUtc, not even an explicit nil
func (o *Organization) UnsetSubmittedAtUtc() {
	o.SubmittedAtUtc.Unset()
}

// GetApprovedBy returns the ApprovedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetApprovedBy() string {
	if o == nil || o.ApprovedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApprovedBy.Get()
}

// GetApprovedByOk returns a tuple with the ApprovedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetApprovedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApprovedBy.Get(), o.ApprovedBy.IsSet()
}

// HasApprovedBy returns a boolean if a field has been set.
func (o *Organization) HasApprovedBy() bool {
	if o != nil && o.ApprovedBy.IsSet() {
		return true
	}

	return false
}

// SetApprovedBy gets a reference to the given NullableString and assigns it to the ApprovedBy field.
func (o *Organization) SetApprovedBy(v string) {
	o.ApprovedBy.Set(&v)
}
// SetApprovedByNil sets the value for ApprovedBy to be an explicit nil
func (o *Organization) SetApprovedByNil() {
	o.ApprovedBy.Set(nil)
}

// UnsetApprovedBy ensures that no value is present for ApprovedBy, not even an explicit nil
func (o *Organization) UnsetApprovedBy() {
	o.ApprovedBy.Unset()
}

// GetApprovedAtUtc returns the ApprovedAtUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetApprovedAtUtc() time.Time {
	if o == nil || o.ApprovedAtUtc.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ApprovedAtUtc.Get()
}

// GetApprovedAtUtcOk returns a tuple with the ApprovedAtUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetApprovedAtUtcOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApprovedAtUtc.Get(), o.ApprovedAtUtc.IsSet()
}

// HasApprovedAtUtc returns a boolean if a field has been set.
func (o *Organization) HasApprovedAtUtc() bool {
	if o != nil && o.ApprovedAtUtc.IsSet() {
		return true
	}

	return false
}

// SetApprovedAtUtc gets a reference to the given NullableTime and assigns it to the ApprovedAtUtc field.
func (o *Organization) SetApprovedAtUtc(v time.Time) {
	o.ApprovedAtUtc.Set(&v)
}
// SetApprovedAtUtcNil sets the value for ApprovedAtUtc to be an explicit nil
func (o *Organization) SetApprovedAtUtcNil() {
	o.ApprovedAtUtc.Set(nil)
}

// UnsetApprovedAtUtc ensures that no value is present for ApprovedAtUtc, not even an explicit nil
func (o *Organization) UnsetApprovedAtUtc() {
	o.ApprovedAtUtc.Unset()
}

// GetIsDigiLockerOrganization returns the IsDigiLockerOrganization field value if set, zero value otherwise.
func (o *Organization) GetIsDigiLockerOrganization() bool {
	if o == nil || o.IsDigiLockerOrganization == nil {
		var ret bool
		return ret
	}
	return *o.IsDigiLockerOrganization
}

// GetIsDigiLockerOrganizationOk returns a tuple with the IsDigiLockerOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsDigiLockerOrganizationOk() (*bool, bool) {
	if o == nil || o.IsDigiLockerOrganization == nil {
		return nil, false
	}
	return o.IsDigiLockerOrganization, true
}

// HasIsDigiLockerOrganization returns a boolean if a field has been set.
func (o *Organization) HasIsDigiLockerOrganization() bool {
	if o != nil && o.IsDigiLockerOrganization != nil {
		return true
	}

	return false
}

// SetIsDigiLockerOrganization gets a reference to the given bool and assigns it to the IsDigiLockerOrganization field.
func (o *Organization) SetIsDigiLockerOrganization(v bool) {
	o.IsDigiLockerOrganization = &v
}

// GetIsMdmcMaintained returns the IsMdmcMaintained field value if set, zero value otherwise.
func (o *Organization) GetIsMdmcMaintained() bool {
	if o == nil || o.IsMdmcMaintained == nil {
		var ret bool
		return ret
	}
	return *o.IsMdmcMaintained
}

// GetIsMdmcMaintainedOk returns a tuple with the IsMdmcMaintained field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsMdmcMaintainedOk() (*bool, bool) {
	if o == nil || o.IsMdmcMaintained == nil {
		return nil, false
	}
	return o.IsMdmcMaintained, true
}

// HasIsMdmcMaintained returns a boolean if a field has been set.
func (o *Organization) HasIsMdmcMaintained() bool {
	if o != nil && o.IsMdmcMaintained != nil {
		return true
	}

	return false
}

// SetIsMdmcMaintained gets a reference to the given bool and assigns it to the IsMdmcMaintained field.
func (o *Organization) SetIsMdmcMaintained(v bool) {
	o.IsMdmcMaintained = &v
}

// GetIsBbps returns the IsBbps field value if set, zero value otherwise.
func (o *Organization) GetIsBbps() bool {
	if o == nil || o.IsBbps == nil {
		var ret bool
		return ret
	}
	return *o.IsBbps
}

// GetIsBbpsOk returns a tuple with the IsBbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsBbpsOk() (*bool, bool) {
	if o == nil || o.IsBbps == nil {
		return nil, false
	}
	return o.IsBbps, true
}

// HasIsBbps returns a boolean if a field has been set.
func (o *Organization) HasIsBbps() bool {
	if o != nil && o.IsBbps != nil {
		return true
	}

	return false
}

// SetIsBbps gets a reference to the given bool and assigns it to the IsBbps field.
func (o *Organization) SetIsBbps(v bool) {
	o.IsBbps = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *Organization) GetMetaData() OrganizationMetaData {
	if o == nil || o.MetaData == nil {
		var ret OrganizationMetaData
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetMetaDataOk() (*OrganizationMetaData, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *Organization) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given OrganizationMetaData and assigns it to the MetaData field.
func (o *Organization) SetMetaData(v OrganizationMetaData) {
	o.MetaData = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetCountryCode() string {
	if o == nil || o.CountryCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CountryCode.Get()
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetCountryCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CountryCode.Get(), o.CountryCode.IsSet()
}

// HasCountryCode returns a boolean if a field has been set.
func (o *Organization) HasCountryCode() bool {
	if o != nil && o.CountryCode.IsSet() {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given NullableString and assigns it to the CountryCode field.
func (o *Organization) SetCountryCode(v string) {
	o.CountryCode.Set(&v)
}
// SetCountryCodeNil sets the value for CountryCode to be an explicit nil
func (o *Organization) SetCountryCodeNil() {
	o.CountryCode.Set(nil)
}

// UnsetCountryCode ensures that no value is present for CountryCode, not even an explicit nil
func (o *Organization) UnsetCountryCode() {
	o.CountryCode.Unset()
}

// GetOrganizationType returns the OrganizationType field value if set, zero value otherwise.
func (o *Organization) GetOrganizationType() OrganizationType {
	if o == nil || o.OrganizationType == nil {
		var ret OrganizationType
		return ret
	}
	return *o.OrganizationType
}

// GetOrganizationTypeOk returns a tuple with the OrganizationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetOrganizationTypeOk() (*OrganizationType, bool) {
	if o == nil || o.OrganizationType == nil {
		return nil, false
	}
	return o.OrganizationType, true
}

// HasOrganizationType returns a boolean if a field has been set.
func (o *Organization) HasOrganizationType() bool {
	if o != nil && o.OrganizationType != nil {
		return true
	}

	return false
}

// SetOrganizationType gets a reference to the given OrganizationType and assigns it to the OrganizationType field.
func (o *Organization) SetOrganizationType(v OrganizationType) {
	o.OrganizationType = &v
}

// GetOrganizationCategory returns the OrganizationCategory field value if set, zero value otherwise.
func (o *Organization) GetOrganizationCategory() OrganizationCategory {
	if o == nil || o.OrganizationCategory == nil {
		var ret OrganizationCategory
		return ret
	}
	return *o.OrganizationCategory
}

// GetOrganizationCategoryOk returns a tuple with the OrganizationCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetOrganizationCategoryOk() (*OrganizationCategory, bool) {
	if o == nil || o.OrganizationCategory == nil {
		return nil, false
	}
	return o.OrganizationCategory, true
}

// HasOrganizationCategory returns a boolean if a field has been set.
func (o *Organization) HasOrganizationCategory() bool {
	if o != nil && o.OrganizationCategory != nil {
		return true
	}

	return false
}

// SetOrganizationCategory gets a reference to the given OrganizationCategory and assigns it to the OrganizationCategory field.
func (o *Organization) SetOrganizationCategory(v OrganizationCategory) {
	o.OrganizationCategory = &v
}

// GetDocumentProviderCategory returns the DocumentProviderCategory field value if set, zero value otherwise.
func (o *Organization) GetDocumentProviderCategory() DocumentProviderCategory {
	if o == nil || o.DocumentProviderCategory == nil {
		var ret DocumentProviderCategory
		return ret
	}
	return *o.DocumentProviderCategory
}

// GetDocumentProviderCategoryOk returns a tuple with the DocumentProviderCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetDocumentProviderCategoryOk() (*DocumentProviderCategory, bool) {
	if o == nil || o.DocumentProviderCategory == nil {
		return nil, false
	}
	return o.DocumentProviderCategory, true
}

// HasDocumentProviderCategory returns a boolean if a field has been set.
func (o *Organization) HasDocumentProviderCategory() bool {
	if o != nil && o.DocumentProviderCategory != nil {
		return true
	}

	return false
}

// SetDocumentProviderCategory gets a reference to the given DocumentProviderCategory and assigns it to the DocumentProviderCategory field.
func (o *Organization) SetDocumentProviderCategory(v DocumentProviderCategory) {
	o.DocumentProviderCategory = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetAddresses() []OrganizationAddress {
	if o == nil  {
		var ret []OrganizationAddress
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetAddressesOk() (*[]OrganizationAddress, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return &o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *Organization) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []OrganizationAddress and assigns it to the Addresses field.
func (o *Organization) SetAddresses(v []OrganizationAddress) {
	o.Addresses = v
}

// GetFinancialAccounts returns the FinancialAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetFinancialAccounts() []OrganizationFinancialAccount {
	if o == nil  {
		var ret []OrganizationFinancialAccount
		return ret
	}
	return o.FinancialAccounts
}

// GetFinancialAccountsOk returns a tuple with the FinancialAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetFinancialAccountsOk() (*[]OrganizationFinancialAccount, bool) {
	if o == nil || o.FinancialAccounts == nil {
		return nil, false
	}
	return &o.FinancialAccounts, true
}

// HasFinancialAccounts returns a boolean if a field has been set.
func (o *Organization) HasFinancialAccounts() bool {
	if o != nil && o.FinancialAccounts != nil {
		return true
	}

	return false
}

// SetFinancialAccounts gets a reference to the given []OrganizationFinancialAccount and assigns it to the FinancialAccounts field.
func (o *Organization) SetFinancialAccounts(v []OrganizationFinancialAccount) {
	o.FinancialAccounts = v
}

// GetCountryState returns the CountryState field value if set, zero value otherwise.
func (o *Organization) GetCountryState() Country {
	if o == nil || o.CountryState == nil {
		var ret Country
		return ret
	}
	return *o.CountryState
}

// GetCountryStateOk returns a tuple with the CountryState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCountryStateOk() (*Country, bool) {
	if o == nil || o.CountryState == nil {
		return nil, false
	}
	return o.CountryState, true
}

// HasCountryState returns a boolean if a field has been set.
func (o *Organization) HasCountryState() bool {
	if o != nil && o.CountryState != nil {
		return true
	}

	return false
}

// SetCountryState gets a reference to the given Country and assigns it to the CountryState field.
func (o *Organization) SetCountryState(v Country) {
	o.CountryState = &v
}

// GetApprovedByUser returns the ApprovedByUser field value if set, zero value otherwise.
func (o *Organization) GetApprovedByUser() ApplicationUser {
	if o == nil || o.ApprovedByUser == nil {
		var ret ApplicationUser
		return ret
	}
	return *o.ApprovedByUser
}

// GetApprovedByUserOk returns a tuple with the ApprovedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetApprovedByUserOk() (*ApplicationUser, bool) {
	if o == nil || o.ApprovedByUser == nil {
		return nil, false
	}
	return o.ApprovedByUser, true
}

// HasApprovedByUser returns a boolean if a field has been set.
func (o *Organization) HasApprovedByUser() bool {
	if o != nil && o.ApprovedByUser != nil {
		return true
	}

	return false
}

// SetApprovedByUser gets a reference to the given ApplicationUser and assigns it to the ApprovedByUser field.
func (o *Organization) SetApprovedByUser(v ApplicationUser) {
	o.ApprovedByUser = &v
}

// GetKyoDocuments returns the KyoDocuments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetKyoDocuments() []OrganizationKyoDocument {
	if o == nil  {
		var ret []OrganizationKyoDocument
		return ret
	}
	return o.KyoDocuments
}

// GetKyoDocumentsOk returns a tuple with the KyoDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetKyoDocumentsOk() (*[]OrganizationKyoDocument, bool) {
	if o == nil || o.KyoDocuments == nil {
		return nil, false
	}
	return &o.KyoDocuments, true
}

// HasKyoDocuments returns a boolean if a field has been set.
func (o *Organization) HasKyoDocuments() bool {
	if o != nil && o.KyoDocuments != nil {
		return true
	}

	return false
}

// SetKyoDocuments gets a reference to the given []OrganizationKyoDocument and assigns it to the KyoDocuments field.
func (o *Organization) SetKyoDocuments(v []OrganizationKyoDocument) {
	o.KyoDocuments = v
}

// GetIsDelete returns the IsDelete field value if set, zero value otherwise.
func (o *Organization) GetIsDelete() bool {
	if o == nil || o.IsDelete == nil {
		var ret bool
		return ret
	}
	return *o.IsDelete
}

// GetIsDeleteOk returns a tuple with the IsDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsDeleteOk() (*bool, bool) {
	if o == nil || o.IsDelete == nil {
		return nil, false
	}
	return o.IsDelete, true
}

// HasIsDelete returns a boolean if a field has been set.
func (o *Organization) HasIsDelete() bool {
	if o != nil && o.IsDelete != nil {
		return true
	}

	return false
}

// SetIsDelete gets a reference to the given bool and assigns it to the IsDelete field.
func (o *Organization) SetIsDelete(v bool) {
	o.IsDelete = &v
}

// GetRecoveryToken returns the RecoveryToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Organization) GetRecoveryToken() string {
	if o == nil || o.RecoveryToken.Get() == nil {
		var ret string
		return ret
	}
	return *o.RecoveryToken.Get()
}

// GetRecoveryTokenOk returns a tuple with the RecoveryToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetRecoveryTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RecoveryToken.Get(), o.RecoveryToken.IsSet()
}

// HasRecoveryToken returns a boolean if a field has been set.
func (o *Organization) HasRecoveryToken() bool {
	if o != nil && o.RecoveryToken.IsSet() {
		return true
	}

	return false
}

// SetRecoveryToken gets a reference to the given NullableString and assigns it to the RecoveryToken field.
func (o *Organization) SetRecoveryToken(v string) {
	o.RecoveryToken.Set(&v)
}
// SetRecoveryTokenNil sets the value for RecoveryToken to be an explicit nil
func (o *Organization) SetRecoveryTokenNil() {
	o.RecoveryToken.Set(nil)
}

// UnsetRecoveryToken ensures that no value is present for RecoveryToken, not even an explicit nil
func (o *Organization) UnsetRecoveryToken() {
	o.RecoveryToken.Unset()
}

func (o Organization) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedAtUtc != nil {
		toSerialize["createdAtUtc"] = o.CreatedAtUtc
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if o.UpdatedAtUtc.IsSet() {
		toSerialize["updatedAtUtc"] = o.UpdatedAtUtc.Get()
	}
	if o.CreatedByUser != nil {
		toSerialize["createdByUser"] = o.CreatedByUser
	}
	if o.UpdatedByUser != nil {
		toSerialize["updatedByUser"] = o.UpdatedByUser
	}
	if o.DeletedBy.IsSet() {
		toSerialize["deletedBy"] = o.DeletedBy.Get()
	}
	if o.DeletedAtUtc.IsSet() {
		toSerialize["deletedAtUtc"] = o.DeletedAtUtc.Get()
	}
	if o.DeletedByUser != nil {
		toSerialize["deletedByUser"] = o.DeletedByUser
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DataPartnerId.IsSet() {
		toSerialize["dataPartnerId"] = o.DataPartnerId.Get()
	}
	if o.TypeId != nil {
		toSerialize["typeId"] = o.TypeId
	}
	if o.CategoryId != nil {
		toSerialize["categoryId"] = o.CategoryId
	}
	if o.DocumentProviderCategoryId.IsSet() {
		toSerialize["documentProviderCategoryId"] = o.DocumentProviderCategoryId.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.RegulatorName.IsSet() {
		toSerialize["regulatorName"] = o.RegulatorName.Get()
	}
	if o.BrandName.IsSet() {
		toSerialize["brandName"] = o.BrandName.Get()
	}
	if o.AuthorizedPersonnelTaxId.IsSet() {
		toSerialize["authorizedPersonnelTaxId"] = o.AuthorizedPersonnelTaxId.Get()
	}
	if o.AuthorizedPersonnelName.IsSet() {
		toSerialize["authorizedPersonnelName"] = o.AuthorizedPersonnelName.Get()
	}
	if o.RegistrationId.IsSet() {
		toSerialize["registrationId"] = o.RegistrationId.Get()
	}
	if o.VatId.IsSet() {
		toSerialize["vatId"] = o.VatId.Get()
	}
	if o.TaxId.IsSet() {
		toSerialize["taxId"] = o.TaxId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.LogoUrl.IsSet() {
		toSerialize["logoUrl"] = o.LogoUrl.Get()
	}
	if o.ContactEmail.IsSet() {
		toSerialize["contactEmail"] = o.ContactEmail.Get()
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phoneNumber"] = o.PhoneNumber.Get()
	}
	if o.CountryId != nil {
		toSerialize["countryId"] = o.CountryId
	}
	if o.StateId != nil {
		toSerialize["stateId"] = o.StateId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.CompanyCode.IsSet() {
		toSerialize["companyCode"] = o.CompanyCode.Get()
	}
	if o.PrivacyPolicyUrl.IsSet() {
		toSerialize["privacyPolicyUrl"] = o.PrivacyPolicyUrl.Get()
	}
	if o.TermsOfServiceUrl.IsSet() {
		toSerialize["termsOfServiceUrl"] = o.TermsOfServiceUrl.Get()
	}
	if o.WebsiteUrl.IsSet() {
		toSerialize["websiteUrl"] = o.WebsiteUrl.Get()
	}
	if o.IsGovernmentOrganization != nil {
		toSerialize["isGovernmentOrganization"] = o.IsGovernmentOrganization
	}
	if o.DlApiKey.IsSet() {
		toSerialize["dlApiKey"] = o.DlApiKey.Get()
	}
	if o.IsKyoCompleted != nil {
		toSerialize["isKyoCompleted"] = o.IsKyoCompleted
	}
	if o.IsEnabled != nil {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if o.IsDataProvider != nil {
		toSerialize["isDataProvider"] = o.IsDataProvider
	}
	if o.IsDataConsumer != nil {
		toSerialize["isDataConsumer"] = o.IsDataConsumer
	}
	if o.SubmittedAtUtc.IsSet() {
		toSerialize["submittedAtUtc"] = o.SubmittedAtUtc.Get()
	}
	if o.ApprovedBy.IsSet() {
		toSerialize["approvedBy"] = o.ApprovedBy.Get()
	}
	if o.ApprovedAtUtc.IsSet() {
		toSerialize["approvedAtUtc"] = o.ApprovedAtUtc.Get()
	}
	if o.IsDigiLockerOrganization != nil {
		toSerialize["isDigiLockerOrganization"] = o.IsDigiLockerOrganization
	}
	if o.IsMdmcMaintained != nil {
		toSerialize["isMdmcMaintained"] = o.IsMdmcMaintained
	}
	if o.IsBbps != nil {
		toSerialize["isBbps"] = o.IsBbps
	}
	if o.MetaData != nil {
		toSerialize["metaData"] = o.MetaData
	}
	if o.CountryCode.IsSet() {
		toSerialize["countryCode"] = o.CountryCode.Get()
	}
	if o.OrganizationType != nil {
		toSerialize["organizationType"] = o.OrganizationType
	}
	if o.OrganizationCategory != nil {
		toSerialize["organizationCategory"] = o.OrganizationCategory
	}
	if o.DocumentProviderCategory != nil {
		toSerialize["documentProviderCategory"] = o.DocumentProviderCategory
	}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.FinancialAccounts != nil {
		toSerialize["financialAccounts"] = o.FinancialAccounts
	}
	if o.CountryState != nil {
		toSerialize["countryState"] = o.CountryState
	}
	if o.ApprovedByUser != nil {
		toSerialize["approvedByUser"] = o.ApprovedByUser
	}
	if o.KyoDocuments != nil {
		toSerialize["kyoDocuments"] = o.KyoDocuments
	}
	if o.IsDelete != nil {
		toSerialize["isDelete"] = o.IsDelete
	}
	if o.RecoveryToken.IsSet() {
		toSerialize["recoveryToken"] = o.RecoveryToken.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOrganization struct {
	value *Organization
	isSet bool
}

func (v NullableOrganization) Get() *Organization {
	return v.value
}

func (v *NullableOrganization) Set(val *Organization) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganization(val *Organization) *NullableOrganization {
	return &NullableOrganization{value: val, isSet: true}
}

func (v NullableOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


