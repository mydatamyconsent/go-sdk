/*
My Data My Consent - Developer API

Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: v1
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mydatamyconsent

import (
	"encoding/json"
	"time"
)

// OrganizationAddress struct for OrganizationAddress
type OrganizationAddress struct {
	CreatedBy *string `json:"createdBy,omitempty"`
	CreatedAtUtc *time.Time `json:"createdAtUtc,omitempty"`
	UpdatedBy NullableString `json:"updatedBy,omitempty"`
	UpdatedAtUtc NullableTime `json:"updatedAtUtc,omitempty"`
	CreatedByUser *ApplicationUser `json:"createdByUser,omitempty"`
	UpdatedByUser *ApplicationUser `json:"updatedByUser,omitempty"`
	DeletedBy NullableString `json:"deletedBy,omitempty"`
	DeletedAtUtc NullableTime `json:"deletedAtUtc,omitempty"`
	DeletedByUser *ApplicationUser `json:"deletedByUser,omitempty"`
	Id *string `json:"id,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	OrganizationName NullableString `json:"organizationName,omitempty"`
	Type *OrganizationAddressType `json:"type,omitempty"`
	AddressLine1 NullableString `json:"addressLine1,omitempty"`
	AddressLine2 NullableString `json:"addressLine2,omitempty"`
	LandMark NullableString `json:"landMark,omitempty"`
	CountryId *string `json:"countryId,omitempty"`
	StateId *string `json:"stateId,omitempty"`
	City NullableString `json:"city,omitempty"`
	PostCode NullableString `json:"postCode,omitempty"`
	ProofDocumentType *ProofDocumentType `json:"proofDocumentType,omitempty"`
	ProofDocumentUrl NullableString `json:"proofDocumentUrl,omitempty"`
	Country *Country `json:"country,omitempty"`
	Organization *Organization `json:"organization,omitempty"`
	CountryState *CountryState `json:"countryState,omitempty"`
	IsPrimary *bool `json:"isPrimary,omitempty"`
	IsVerified *bool `json:"isVerified,omitempty"`
}

// NewOrganizationAddress instantiates a new OrganizationAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationAddress() *OrganizationAddress {
	this := OrganizationAddress{}
	return &this
}

// NewOrganizationAddressWithDefaults instantiates a new OrganizationAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationAddressWithDefaults() *OrganizationAddress {
	this := OrganizationAddress{}
	return &this
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *OrganizationAddress) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *OrganizationAddress) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *OrganizationAddress) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedAtUtc returns the CreatedAtUtc field value if set, zero value otherwise.
func (o *OrganizationAddress) GetCreatedAtUtc() time.Time {
	if o == nil || o.CreatedAtUtc == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtUtc
}

// GetCreatedAtUtcOk returns a tuple with the CreatedAtUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetCreatedAtUtcOk() (*time.Time, bool) {
	if o == nil || o.CreatedAtUtc == nil {
		return nil, false
	}
	return o.CreatedAtUtc, true
}

// HasCreatedAtUtc returns a boolean if a field has been set.
func (o *OrganizationAddress) HasCreatedAtUtc() bool {
	if o != nil && o.CreatedAtUtc != nil {
		return true
	}

	return false
}

// SetCreatedAtUtc gets a reference to the given time.Time and assigns it to the CreatedAtUtc field.
func (o *OrganizationAddress) SetCreatedAtUtc(v time.Time) {
	o.CreatedAtUtc = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetUpdatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *OrganizationAddress) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *OrganizationAddress) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}
// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *OrganizationAddress) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *OrganizationAddress) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetUpdatedAtUtc returns the UpdatedAtUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetUpdatedAtUtc() time.Time {
	if o == nil || o.UpdatedAtUtc.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtUtc.Get()
}

// GetUpdatedAtUtcOk returns a tuple with the UpdatedAtUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetUpdatedAtUtcOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdatedAtUtc.Get(), o.UpdatedAtUtc.IsSet()
}

// HasUpdatedAtUtc returns a boolean if a field has been set.
func (o *OrganizationAddress) HasUpdatedAtUtc() bool {
	if o != nil && o.UpdatedAtUtc.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtUtc gets a reference to the given NullableTime and assigns it to the UpdatedAtUtc field.
func (o *OrganizationAddress) SetUpdatedAtUtc(v time.Time) {
	o.UpdatedAtUtc.Set(&v)
}
// SetUpdatedAtUtcNil sets the value for UpdatedAtUtc to be an explicit nil
func (o *OrganizationAddress) SetUpdatedAtUtcNil() {
	o.UpdatedAtUtc.Set(nil)
}

// UnsetUpdatedAtUtc ensures that no value is present for UpdatedAtUtc, not even an explicit nil
func (o *OrganizationAddress) UnsetUpdatedAtUtc() {
	o.UpdatedAtUtc.Unset()
}

// GetCreatedByUser returns the CreatedByUser field value if set, zero value otherwise.
func (o *OrganizationAddress) GetCreatedByUser() ApplicationUser {
	if o == nil || o.CreatedByUser == nil {
		var ret ApplicationUser
		return ret
	}
	return *o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetCreatedByUserOk() (*ApplicationUser, bool) {
	if o == nil || o.CreatedByUser == nil {
		return nil, false
	}
	return o.CreatedByUser, true
}

// HasCreatedByUser returns a boolean if a field has been set.
func (o *OrganizationAddress) HasCreatedByUser() bool {
	if o != nil && o.CreatedByUser != nil {
		return true
	}

	return false
}

// SetCreatedByUser gets a reference to the given ApplicationUser and assigns it to the CreatedByUser field.
func (o *OrganizationAddress) SetCreatedByUser(v ApplicationUser) {
	o.CreatedByUser = &v
}

// GetUpdatedByUser returns the UpdatedByUser field value if set, zero value otherwise.
func (o *OrganizationAddress) GetUpdatedByUser() ApplicationUser {
	if o == nil || o.UpdatedByUser == nil {
		var ret ApplicationUser
		return ret
	}
	return *o.UpdatedByUser
}

// GetUpdatedByUserOk returns a tuple with the UpdatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetUpdatedByUserOk() (*ApplicationUser, bool) {
	if o == nil || o.UpdatedByUser == nil {
		return nil, false
	}
	return o.UpdatedByUser, true
}

// HasUpdatedByUser returns a boolean if a field has been set.
func (o *OrganizationAddress) HasUpdatedByUser() bool {
	if o != nil && o.UpdatedByUser != nil {
		return true
	}

	return false
}

// SetUpdatedByUser gets a reference to the given ApplicationUser and assigns it to the UpdatedByUser field.
func (o *OrganizationAddress) SetUpdatedByUser(v ApplicationUser) {
	o.UpdatedByUser = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetDeletedBy() string {
	if o == nil || o.DeletedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeletedBy.Get()
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetDeletedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedBy.Get(), o.DeletedBy.IsSet()
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *OrganizationAddress) HasDeletedBy() bool {
	if o != nil && o.DeletedBy.IsSet() {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given NullableString and assigns it to the DeletedBy field.
func (o *OrganizationAddress) SetDeletedBy(v string) {
	o.DeletedBy.Set(&v)
}
// SetDeletedByNil sets the value for DeletedBy to be an explicit nil
func (o *OrganizationAddress) SetDeletedByNil() {
	o.DeletedBy.Set(nil)
}

// UnsetDeletedBy ensures that no value is present for DeletedBy, not even an explicit nil
func (o *OrganizationAddress) UnsetDeletedBy() {
	o.DeletedBy.Unset()
}

// GetDeletedAtUtc returns the DeletedAtUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetDeletedAtUtc() time.Time {
	if o == nil || o.DeletedAtUtc.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedAtUtc.Get()
}

// GetDeletedAtUtcOk returns a tuple with the DeletedAtUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetDeletedAtUtcOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedAtUtc.Get(), o.DeletedAtUtc.IsSet()
}

// HasDeletedAtUtc returns a boolean if a field has been set.
func (o *OrganizationAddress) HasDeletedAtUtc() bool {
	if o != nil && o.DeletedAtUtc.IsSet() {
		return true
	}

	return false
}

// SetDeletedAtUtc gets a reference to the given NullableTime and assigns it to the DeletedAtUtc field.
func (o *OrganizationAddress) SetDeletedAtUtc(v time.Time) {
	o.DeletedAtUtc.Set(&v)
}
// SetDeletedAtUtcNil sets the value for DeletedAtUtc to be an explicit nil
func (o *OrganizationAddress) SetDeletedAtUtcNil() {
	o.DeletedAtUtc.Set(nil)
}

// UnsetDeletedAtUtc ensures that no value is present for DeletedAtUtc, not even an explicit nil
func (o *OrganizationAddress) UnsetDeletedAtUtc() {
	o.DeletedAtUtc.Unset()
}

// GetDeletedByUser returns the DeletedByUser field value if set, zero value otherwise.
func (o *OrganizationAddress) GetDeletedByUser() ApplicationUser {
	if o == nil || o.DeletedByUser == nil {
		var ret ApplicationUser
		return ret
	}
	return *o.DeletedByUser
}

// GetDeletedByUserOk returns a tuple with the DeletedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetDeletedByUserOk() (*ApplicationUser, bool) {
	if o == nil || o.DeletedByUser == nil {
		return nil, false
	}
	return o.DeletedByUser, true
}

// HasDeletedByUser returns a boolean if a field has been set.
func (o *OrganizationAddress) HasDeletedByUser() bool {
	if o != nil && o.DeletedByUser != nil {
		return true
	}

	return false
}

// SetDeletedByUser gets a reference to the given ApplicationUser and assigns it to the DeletedByUser field.
func (o *OrganizationAddress) SetDeletedByUser(v ApplicationUser) {
	o.DeletedByUser = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationAddress) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationAddress) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationAddress) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *OrganizationAddress) GetOrganizationId() string {
	if o == nil || o.OrganizationId == nil {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetOrganizationIdOk() (*string, bool) {
	if o == nil || o.OrganizationId == nil {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *OrganizationAddress) HasOrganizationId() bool {
	if o != nil && o.OrganizationId != nil {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *OrganizationAddress) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetOrganizationName() string {
	if o == nil || o.OrganizationName.Get() == nil {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetOrganizationNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *OrganizationAddress) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *OrganizationAddress) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}
// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *OrganizationAddress) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *OrganizationAddress) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OrganizationAddress) GetType() OrganizationAddressType {
	if o == nil || o.Type == nil {
		var ret OrganizationAddressType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetTypeOk() (*OrganizationAddressType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OrganizationAddress) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given OrganizationAddressType and assigns it to the Type field.
func (o *OrganizationAddress) SetType(v OrganizationAddressType) {
	o.Type = &v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetAddressLine1() string {
	if o == nil || o.AddressLine1.Get() == nil {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetAddressLine1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *OrganizationAddress) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *OrganizationAddress) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *OrganizationAddress) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *OrganizationAddress) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetAddressLine2() string {
	if o == nil || o.AddressLine2.Get() == nil {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetAddressLine2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *OrganizationAddress) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *OrganizationAddress) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *OrganizationAddress) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *OrganizationAddress) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetLandMark returns the LandMark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetLandMark() string {
	if o == nil || o.LandMark.Get() == nil {
		var ret string
		return ret
	}
	return *o.LandMark.Get()
}

// GetLandMarkOk returns a tuple with the LandMark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetLandMarkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LandMark.Get(), o.LandMark.IsSet()
}

// HasLandMark returns a boolean if a field has been set.
func (o *OrganizationAddress) HasLandMark() bool {
	if o != nil && o.LandMark.IsSet() {
		return true
	}

	return false
}

// SetLandMark gets a reference to the given NullableString and assigns it to the LandMark field.
func (o *OrganizationAddress) SetLandMark(v string) {
	o.LandMark.Set(&v)
}
// SetLandMarkNil sets the value for LandMark to be an explicit nil
func (o *OrganizationAddress) SetLandMarkNil() {
	o.LandMark.Set(nil)
}

// UnsetLandMark ensures that no value is present for LandMark, not even an explicit nil
func (o *OrganizationAddress) UnsetLandMark() {
	o.LandMark.Unset()
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *OrganizationAddress) GetCountryId() string {
	if o == nil || o.CountryId == nil {
		var ret string
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetCountryIdOk() (*string, bool) {
	if o == nil || o.CountryId == nil {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *OrganizationAddress) HasCountryId() bool {
	if o != nil && o.CountryId != nil {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given string and assigns it to the CountryId field.
func (o *OrganizationAddress) SetCountryId(v string) {
	o.CountryId = &v
}

// GetStateId returns the StateId field value if set, zero value otherwise.
func (o *OrganizationAddress) GetStateId() string {
	if o == nil || o.StateId == nil {
		var ret string
		return ret
	}
	return *o.StateId
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetStateIdOk() (*string, bool) {
	if o == nil || o.StateId == nil {
		return nil, false
	}
	return o.StateId, true
}

// HasStateId returns a boolean if a field has been set.
func (o *OrganizationAddress) HasStateId() bool {
	if o != nil && o.StateId != nil {
		return true
	}

	return false
}

// SetStateId gets a reference to the given string and assigns it to the StateId field.
func (o *OrganizationAddress) SetStateId(v string) {
	o.StateId = &v
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetCity() string {
	if o == nil || o.City.Get() == nil {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *OrganizationAddress) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *OrganizationAddress) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *OrganizationAddress) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *OrganizationAddress) UnsetCity() {
	o.City.Unset()
}

// GetPostCode returns the PostCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetPostCode() string {
	if o == nil || o.PostCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.PostCode.Get()
}

// GetPostCodeOk returns a tuple with the PostCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetPostCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PostCode.Get(), o.PostCode.IsSet()
}

// HasPostCode returns a boolean if a field has been set.
func (o *OrganizationAddress) HasPostCode() bool {
	if o != nil && o.PostCode.IsSet() {
		return true
	}

	return false
}

// SetPostCode gets a reference to the given NullableString and assigns it to the PostCode field.
func (o *OrganizationAddress) SetPostCode(v string) {
	o.PostCode.Set(&v)
}
// SetPostCodeNil sets the value for PostCode to be an explicit nil
func (o *OrganizationAddress) SetPostCodeNil() {
	o.PostCode.Set(nil)
}

// UnsetPostCode ensures that no value is present for PostCode, not even an explicit nil
func (o *OrganizationAddress) UnsetPostCode() {
	o.PostCode.Unset()
}

// GetProofDocumentType returns the ProofDocumentType field value if set, zero value otherwise.
func (o *OrganizationAddress) GetProofDocumentType() ProofDocumentType {
	if o == nil || o.ProofDocumentType == nil {
		var ret ProofDocumentType
		return ret
	}
	return *o.ProofDocumentType
}

// GetProofDocumentTypeOk returns a tuple with the ProofDocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetProofDocumentTypeOk() (*ProofDocumentType, bool) {
	if o == nil || o.ProofDocumentType == nil {
		return nil, false
	}
	return o.ProofDocumentType, true
}

// HasProofDocumentType returns a boolean if a field has been set.
func (o *OrganizationAddress) HasProofDocumentType() bool {
	if o != nil && o.ProofDocumentType != nil {
		return true
	}

	return false
}

// SetProofDocumentType gets a reference to the given ProofDocumentType and assigns it to the ProofDocumentType field.
func (o *OrganizationAddress) SetProofDocumentType(v ProofDocumentType) {
	o.ProofDocumentType = &v
}

// GetProofDocumentUrl returns the ProofDocumentUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationAddress) GetProofDocumentUrl() string {
	if o == nil || o.ProofDocumentUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProofDocumentUrl.Get()
}

// GetProofDocumentUrlOk returns a tuple with the ProofDocumentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationAddress) GetProofDocumentUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProofDocumentUrl.Get(), o.ProofDocumentUrl.IsSet()
}

// HasProofDocumentUrl returns a boolean if a field has been set.
func (o *OrganizationAddress) HasProofDocumentUrl() bool {
	if o != nil && o.ProofDocumentUrl.IsSet() {
		return true
	}

	return false
}

// SetProofDocumentUrl gets a reference to the given NullableString and assigns it to the ProofDocumentUrl field.
func (o *OrganizationAddress) SetProofDocumentUrl(v string) {
	o.ProofDocumentUrl.Set(&v)
}
// SetProofDocumentUrlNil sets the value for ProofDocumentUrl to be an explicit nil
func (o *OrganizationAddress) SetProofDocumentUrlNil() {
	o.ProofDocumentUrl.Set(nil)
}

// UnsetProofDocumentUrl ensures that no value is present for ProofDocumentUrl, not even an explicit nil
func (o *OrganizationAddress) UnsetProofDocumentUrl() {
	o.ProofDocumentUrl.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *OrganizationAddress) GetCountry() Country {
	if o == nil || o.Country == nil {
		var ret Country
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetCountryOk() (*Country, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *OrganizationAddress) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given Country and assigns it to the Country field.
func (o *OrganizationAddress) SetCountry(v Country) {
	o.Country = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *OrganizationAddress) GetOrganization() Organization {
	if o == nil || o.Organization == nil {
		var ret Organization
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetOrganizationOk() (*Organization, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *OrganizationAddress) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given Organization and assigns it to the Organization field.
func (o *OrganizationAddress) SetOrganization(v Organization) {
	o.Organization = &v
}

// GetCountryState returns the CountryState field value if set, zero value otherwise.
func (o *OrganizationAddress) GetCountryState() CountryState {
	if o == nil || o.CountryState == nil {
		var ret CountryState
		return ret
	}
	return *o.CountryState
}

// GetCountryStateOk returns a tuple with the CountryState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetCountryStateOk() (*CountryState, bool) {
	if o == nil || o.CountryState == nil {
		return nil, false
	}
	return o.CountryState, true
}

// HasCountryState returns a boolean if a field has been set.
func (o *OrganizationAddress) HasCountryState() bool {
	if o != nil && o.CountryState != nil {
		return true
	}

	return false
}

// SetCountryState gets a reference to the given CountryState and assigns it to the CountryState field.
func (o *OrganizationAddress) SetCountryState(v CountryState) {
	o.CountryState = &v
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *OrganizationAddress) GetIsPrimary() bool {
	if o == nil || o.IsPrimary == nil {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || o.IsPrimary == nil {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *OrganizationAddress) HasIsPrimary() bool {
	if o != nil && o.IsPrimary != nil {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *OrganizationAddress) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetIsVerified returns the IsVerified field value if set, zero value otherwise.
func (o *OrganizationAddress) GetIsVerified() bool {
	if o == nil || o.IsVerified == nil {
		var ret bool
		return ret
	}
	return *o.IsVerified
}

// GetIsVerifiedOk returns a tuple with the IsVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAddress) GetIsVerifiedOk() (*bool, bool) {
	if o == nil || o.IsVerified == nil {
		return nil, false
	}
	return o.IsVerified, true
}

// HasIsVerified returns a boolean if a field has been set.
func (o *OrganizationAddress) HasIsVerified() bool {
	if o != nil && o.IsVerified != nil {
		return true
	}

	return false
}

// SetIsVerified gets a reference to the given bool and assigns it to the IsVerified field.
func (o *OrganizationAddress) SetIsVerified(v bool) {
	o.IsVerified = &v
}

func (o OrganizationAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedAtUtc != nil {
		toSerialize["createdAtUtc"] = o.CreatedAtUtc
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if o.UpdatedAtUtc.IsSet() {
		toSerialize["updatedAtUtc"] = o.UpdatedAtUtc.Get()
	}
	if o.CreatedByUser != nil {
		toSerialize["createdByUser"] = o.CreatedByUser
	}
	if o.UpdatedByUser != nil {
		toSerialize["updatedByUser"] = o.UpdatedByUser
	}
	if o.DeletedBy.IsSet() {
		toSerialize["deletedBy"] = o.DeletedBy.Get()
	}
	if o.DeletedAtUtc.IsSet() {
		toSerialize["deletedAtUtc"] = o.DeletedAtUtc.Get()
	}
	if o.DeletedByUser != nil {
		toSerialize["deletedByUser"] = o.DeletedByUser
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OrganizationId != nil {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.AddressLine1.IsSet() {
		toSerialize["addressLine1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["addressLine2"] = o.AddressLine2.Get()
	}
	if o.LandMark.IsSet() {
		toSerialize["landMark"] = o.LandMark.Get()
	}
	if o.CountryId != nil {
		toSerialize["countryId"] = o.CountryId
	}
	if o.StateId != nil {
		toSerialize["stateId"] = o.StateId
	}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if o.PostCode.IsSet() {
		toSerialize["postCode"] = o.PostCode.Get()
	}
	if o.ProofDocumentType != nil {
		toSerialize["proofDocumentType"] = o.ProofDocumentType
	}
	if o.ProofDocumentUrl.IsSet() {
		toSerialize["proofDocumentUrl"] = o.ProofDocumentUrl.Get()
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.CountryState != nil {
		toSerialize["countryState"] = o.CountryState
	}
	if o.IsPrimary != nil {
		toSerialize["isPrimary"] = o.IsPrimary
	}
	if o.IsVerified != nil {
		toSerialize["isVerified"] = o.IsVerified
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationAddress struct {
	value *OrganizationAddress
	isSet bool
}

func (v NullableOrganizationAddress) Get() *OrganizationAddress {
	return v.value
}

func (v *NullableOrganizationAddress) Set(val *OrganizationAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationAddress(val *OrganizationAddress) *NullableOrganizationAddress {
	return &NullableOrganizationAddress{value: val, isSet: true}
}

func (v NullableOrganizationAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


