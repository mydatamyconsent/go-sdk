/*
My Data My Consent - Developer API

Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: v1
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
)

// Requester struct for Requester
type Requester struct {
	Id string `json:"id"`
	Name string `json:"name"`
	LogoUrl NullableString `json:"logoUrl,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Location NullableString `json:"location,omitempty"`
	WebsiteUrl NullableString `json:"websiteUrl,omitempty"`
	SupportEmail NullableString `json:"supportEmail,omitempty"`
	HelpLineNumber NullableString `json:"helpLineNumber,omitempty"`
}

// NewRequester instantiates a new Requester object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequester(id string, name string) *Requester {
	this := Requester{}
	this.Id = id
	this.Name = name
	return &this
}

// NewRequesterWithDefaults instantiates a new Requester object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequesterWithDefaults() *Requester {
	this := Requester{}
	return &this
}

// GetId returns the Id field value
func (o *Requester) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Requester) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Requester) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Requester) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Requester) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Requester) SetName(v string) {
	o.Name = v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Requester) GetLogoUrl() string {
	if o == nil || o.LogoUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl.Get()
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Requester) GetLogoUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogoUrl.Get(), o.LogoUrl.IsSet()
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *Requester) HasLogoUrl() bool {
	if o != nil && o.LogoUrl.IsSet() {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given NullableString and assigns it to the LogoUrl field.
func (o *Requester) SetLogoUrl(v string) {
	o.LogoUrl.Set(&v)
}
// SetLogoUrlNil sets the value for LogoUrl to be an explicit nil
func (o *Requester) SetLogoUrlNil() {
	o.LogoUrl.Set(nil)
}

// UnsetLogoUrl ensures that no value is present for LogoUrl, not even an explicit nil
func (o *Requester) UnsetLogoUrl() {
	o.LogoUrl.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Requester) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Requester) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Requester) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Requester) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Requester) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Requester) UnsetDescription() {
	o.Description.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Requester) GetLocation() string {
	if o == nil || o.Location.Get() == nil {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Requester) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *Requester) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *Requester) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *Requester) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *Requester) UnsetLocation() {
	o.Location.Unset()
}

// GetWebsiteUrl returns the WebsiteUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Requester) GetWebsiteUrl() string {
	if o == nil || o.WebsiteUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.WebsiteUrl.Get()
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Requester) GetWebsiteUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WebsiteUrl.Get(), o.WebsiteUrl.IsSet()
}

// HasWebsiteUrl returns a boolean if a field has been set.
func (o *Requester) HasWebsiteUrl() bool {
	if o != nil && o.WebsiteUrl.IsSet() {
		return true
	}

	return false
}

// SetWebsiteUrl gets a reference to the given NullableString and assigns it to the WebsiteUrl field.
func (o *Requester) SetWebsiteUrl(v string) {
	o.WebsiteUrl.Set(&v)
}
// SetWebsiteUrlNil sets the value for WebsiteUrl to be an explicit nil
func (o *Requester) SetWebsiteUrlNil() {
	o.WebsiteUrl.Set(nil)
}

// UnsetWebsiteUrl ensures that no value is present for WebsiteUrl, not even an explicit nil
func (o *Requester) UnsetWebsiteUrl() {
	o.WebsiteUrl.Unset()
}

// GetSupportEmail returns the SupportEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Requester) GetSupportEmail() string {
	if o == nil || o.SupportEmail.Get() == nil {
		var ret string
		return ret
	}
	return *o.SupportEmail.Get()
}

// GetSupportEmailOk returns a tuple with the SupportEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Requester) GetSupportEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SupportEmail.Get(), o.SupportEmail.IsSet()
}

// HasSupportEmail returns a boolean if a field has been set.
func (o *Requester) HasSupportEmail() bool {
	if o != nil && o.SupportEmail.IsSet() {
		return true
	}

	return false
}

// SetSupportEmail gets a reference to the given NullableString and assigns it to the SupportEmail field.
func (o *Requester) SetSupportEmail(v string) {
	o.SupportEmail.Set(&v)
}
// SetSupportEmailNil sets the value for SupportEmail to be an explicit nil
func (o *Requester) SetSupportEmailNil() {
	o.SupportEmail.Set(nil)
}

// UnsetSupportEmail ensures that no value is present for SupportEmail, not even an explicit nil
func (o *Requester) UnsetSupportEmail() {
	o.SupportEmail.Unset()
}

// GetHelpLineNumber returns the HelpLineNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Requester) GetHelpLineNumber() string {
	if o == nil || o.HelpLineNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.HelpLineNumber.Get()
}

// GetHelpLineNumberOk returns a tuple with the HelpLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Requester) GetHelpLineNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HelpLineNumber.Get(), o.HelpLineNumber.IsSet()
}

// HasHelpLineNumber returns a boolean if a field has been set.
func (o *Requester) HasHelpLineNumber() bool {
	if o != nil && o.HelpLineNumber.IsSet() {
		return true
	}

	return false
}

// SetHelpLineNumber gets a reference to the given NullableString and assigns it to the HelpLineNumber field.
func (o *Requester) SetHelpLineNumber(v string) {
	o.HelpLineNumber.Set(&v)
}
// SetHelpLineNumberNil sets the value for HelpLineNumber to be an explicit nil
func (o *Requester) SetHelpLineNumberNil() {
	o.HelpLineNumber.Set(nil)
}

// UnsetHelpLineNumber ensures that no value is present for HelpLineNumber, not even an explicit nil
func (o *Requester) UnsetHelpLineNumber() {
	o.HelpLineNumber.Unset()
}

func (o Requester) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.LogoUrl.IsSet() {
		toSerialize["logoUrl"] = o.LogoUrl.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.WebsiteUrl.IsSet() {
		toSerialize["websiteUrl"] = o.WebsiteUrl.Get()
	}
	if o.SupportEmail.IsSet() {
		toSerialize["supportEmail"] = o.SupportEmail.Get()
	}
	if o.HelpLineNumber.IsSet() {
		toSerialize["helpLineNumber"] = o.HelpLineNumber.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRequester struct {
	value *Requester
	isSet bool
}

func (v NullableRequester) Get() *Requester {
	return v.value
}

func (v *NullableRequester) Set(val *Requester) {
	v.value = val
	v.isSet = true
}

func (v NullableRequester) IsSet() bool {
	return v.isSet
}

func (v *NullableRequester) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequester(val *Requester) *NullableRequester {
	return &NullableRequester{value: val, isSet: true}
}

func (v NullableRequester) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequester) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


