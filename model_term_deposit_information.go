/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
	"time"
)

// TermDepositInformation struct for TermDepositInformation
type TermDepositInformation struct {
	DepositType TermDepositAccountType `json:"deposit_type"`
	Description string `json:"description"`
	CurrencyCode string `json:"currency_code"`
	PrincipalAmount float64 `json:"principal_amount"`
	InterestRate float32 `json:"interest_rate"`
	InterestPayout TermDepositInterestPayoutType `json:"interest_payout"`
	InterestComputation TermDepositInterestComputation `json:"interest_computation"`
	CompoundingFrequency TermDepositCompoundingFrequency `json:"compounding_frequency"`
	InterestPeriodicPayoutAmount float64 `json:"interest_periodic_payout_amount"`
	InterestOnMaturity float64 `json:"interest_on_maturity"`
	DepositOpeningDate time.Time `json:"deposit_opening_date"`
	MaturityDate time.Time `json:"maturity_date"`
	MaturityAmount float64 `json:"maturity_amount"`
	TenureDays int32 `json:"tenure_days"`
	TenureMonths int32 `json:"tenure_months"`
	TenureYears int32 `json:"tenure_years"`
}

// NewTermDepositInformation instantiates a new TermDepositInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTermDepositInformation(depositType TermDepositAccountType, description string, currencyCode string, principalAmount float64, interestRate float32, interestPayout TermDepositInterestPayoutType, interestComputation TermDepositInterestComputation, compoundingFrequency TermDepositCompoundingFrequency, interestPeriodicPayoutAmount float64, interestOnMaturity float64, depositOpeningDate time.Time, maturityDate time.Time, maturityAmount float64, tenureDays int32, tenureMonths int32, tenureYears int32) *TermDepositInformation {
	this := TermDepositInformation{}
	this.DepositType = depositType
	this.Description = description
	this.CurrencyCode = currencyCode
	this.PrincipalAmount = principalAmount
	this.InterestRate = interestRate
	this.InterestPayout = interestPayout
	this.InterestComputation = interestComputation
	this.CompoundingFrequency = compoundingFrequency
	this.InterestPeriodicPayoutAmount = interestPeriodicPayoutAmount
	this.InterestOnMaturity = interestOnMaturity
	this.DepositOpeningDate = depositOpeningDate
	this.MaturityDate = maturityDate
	this.MaturityAmount = maturityAmount
	this.TenureDays = tenureDays
	this.TenureMonths = tenureMonths
	this.TenureYears = tenureYears
	return &this
}

// NewTermDepositInformationWithDefaults instantiates a new TermDepositInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTermDepositInformationWithDefaults() *TermDepositInformation {
	this := TermDepositInformation{}
	return &this
}

// GetDepositType returns the DepositType field value
func (o *TermDepositInformation) GetDepositType() TermDepositAccountType {
	if o == nil {
		var ret TermDepositAccountType
		return ret
	}

	return o.DepositType
}

// GetDepositTypeOk returns a tuple with the DepositType field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetDepositTypeOk() (*TermDepositAccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepositType, true
}

// SetDepositType sets field value
func (o *TermDepositInformation) SetDepositType(v TermDepositAccountType) {
	o.DepositType = v
}

// GetDescription returns the Description field value
func (o *TermDepositInformation) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *TermDepositInformation) SetDescription(v string) {
	o.Description = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *TermDepositInformation) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *TermDepositInformation) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetPrincipalAmount returns the PrincipalAmount field value
func (o *TermDepositInformation) GetPrincipalAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.PrincipalAmount
}

// GetPrincipalAmountOk returns a tuple with the PrincipalAmount field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetPrincipalAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrincipalAmount, true
}

// SetPrincipalAmount sets field value
func (o *TermDepositInformation) SetPrincipalAmount(v float64) {
	o.PrincipalAmount = v
}

// GetInterestRate returns the InterestRate field value
func (o *TermDepositInformation) GetInterestRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InterestRate
}

// GetInterestRateOk returns a tuple with the InterestRate field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetInterestRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InterestRate, true
}

// SetInterestRate sets field value
func (o *TermDepositInformation) SetInterestRate(v float32) {
	o.InterestRate = v
}

// GetInterestPayout returns the InterestPayout field value
func (o *TermDepositInformation) GetInterestPayout() TermDepositInterestPayoutType {
	if o == nil {
		var ret TermDepositInterestPayoutType
		return ret
	}

	return o.InterestPayout
}

// GetInterestPayoutOk returns a tuple with the InterestPayout field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetInterestPayoutOk() (*TermDepositInterestPayoutType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InterestPayout, true
}

// SetInterestPayout sets field value
func (o *TermDepositInformation) SetInterestPayout(v TermDepositInterestPayoutType) {
	o.InterestPayout = v
}

// GetInterestComputation returns the InterestComputation field value
func (o *TermDepositInformation) GetInterestComputation() TermDepositInterestComputation {
	if o == nil {
		var ret TermDepositInterestComputation
		return ret
	}

	return o.InterestComputation
}

// GetInterestComputationOk returns a tuple with the InterestComputation field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetInterestComputationOk() (*TermDepositInterestComputation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InterestComputation, true
}

// SetInterestComputation sets field value
func (o *TermDepositInformation) SetInterestComputation(v TermDepositInterestComputation) {
	o.InterestComputation = v
}

// GetCompoundingFrequency returns the CompoundingFrequency field value
func (o *TermDepositInformation) GetCompoundingFrequency() TermDepositCompoundingFrequency {
	if o == nil {
		var ret TermDepositCompoundingFrequency
		return ret
	}

	return o.CompoundingFrequency
}

// GetCompoundingFrequencyOk returns a tuple with the CompoundingFrequency field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetCompoundingFrequencyOk() (*TermDepositCompoundingFrequency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompoundingFrequency, true
}

// SetCompoundingFrequency sets field value
func (o *TermDepositInformation) SetCompoundingFrequency(v TermDepositCompoundingFrequency) {
	o.CompoundingFrequency = v
}

// GetInterestPeriodicPayoutAmount returns the InterestPeriodicPayoutAmount field value
func (o *TermDepositInformation) GetInterestPeriodicPayoutAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.InterestPeriodicPayoutAmount
}

// GetInterestPeriodicPayoutAmountOk returns a tuple with the InterestPeriodicPayoutAmount field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetInterestPeriodicPayoutAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InterestPeriodicPayoutAmount, true
}

// SetInterestPeriodicPayoutAmount sets field value
func (o *TermDepositInformation) SetInterestPeriodicPayoutAmount(v float64) {
	o.InterestPeriodicPayoutAmount = v
}

// GetInterestOnMaturity returns the InterestOnMaturity field value
func (o *TermDepositInformation) GetInterestOnMaturity() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.InterestOnMaturity
}

// GetInterestOnMaturityOk returns a tuple with the InterestOnMaturity field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetInterestOnMaturityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InterestOnMaturity, true
}

// SetInterestOnMaturity sets field value
func (o *TermDepositInformation) SetInterestOnMaturity(v float64) {
	o.InterestOnMaturity = v
}

// GetDepositOpeningDate returns the DepositOpeningDate field value
func (o *TermDepositInformation) GetDepositOpeningDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DepositOpeningDate
}

// GetDepositOpeningDateOk returns a tuple with the DepositOpeningDate field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetDepositOpeningDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepositOpeningDate, true
}

// SetDepositOpeningDate sets field value
func (o *TermDepositInformation) SetDepositOpeningDate(v time.Time) {
	o.DepositOpeningDate = v
}

// GetMaturityDate returns the MaturityDate field value
func (o *TermDepositInformation) GetMaturityDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.MaturityDate
}

// GetMaturityDateOk returns a tuple with the MaturityDate field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetMaturityDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaturityDate, true
}

// SetMaturityDate sets field value
func (o *TermDepositInformation) SetMaturityDate(v time.Time) {
	o.MaturityDate = v
}

// GetMaturityAmount returns the MaturityAmount field value
func (o *TermDepositInformation) GetMaturityAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.MaturityAmount
}

// GetMaturityAmountOk returns a tuple with the MaturityAmount field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetMaturityAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaturityAmount, true
}

// SetMaturityAmount sets field value
func (o *TermDepositInformation) SetMaturityAmount(v float64) {
	o.MaturityAmount = v
}

// GetTenureDays returns the TenureDays field value
func (o *TermDepositInformation) GetTenureDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TenureDays
}

// GetTenureDaysOk returns a tuple with the TenureDays field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetTenureDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenureDays, true
}

// SetTenureDays sets field value
func (o *TermDepositInformation) SetTenureDays(v int32) {
	o.TenureDays = v
}

// GetTenureMonths returns the TenureMonths field value
func (o *TermDepositInformation) GetTenureMonths() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TenureMonths
}

// GetTenureMonthsOk returns a tuple with the TenureMonths field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetTenureMonthsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenureMonths, true
}

// SetTenureMonths sets field value
func (o *TermDepositInformation) SetTenureMonths(v int32) {
	o.TenureMonths = v
}

// GetTenureYears returns the TenureYears field value
func (o *TermDepositInformation) GetTenureYears() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TenureYears
}

// GetTenureYearsOk returns a tuple with the TenureYears field value
// and a boolean to check if the value has been set.
func (o *TermDepositInformation) GetTenureYearsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenureYears, true
}

// SetTenureYears sets field value
func (o *TermDepositInformation) SetTenureYears(v int32) {
	o.TenureYears = v
}

func (o TermDepositInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["deposit_type"] = o.DepositType
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if true {
		toSerialize["principal_amount"] = o.PrincipalAmount
	}
	if true {
		toSerialize["interest_rate"] = o.InterestRate
	}
	if true {
		toSerialize["interest_payout"] = o.InterestPayout
	}
	if true {
		toSerialize["interest_computation"] = o.InterestComputation
	}
	if true {
		toSerialize["compounding_frequency"] = o.CompoundingFrequency
	}
	if true {
		toSerialize["interest_periodic_payout_amount"] = o.InterestPeriodicPayoutAmount
	}
	if true {
		toSerialize["interest_on_maturity"] = o.InterestOnMaturity
	}
	if true {
		toSerialize["deposit_opening_date"] = o.DepositOpeningDate
	}
	if true {
		toSerialize["maturity_date"] = o.MaturityDate
	}
	if true {
		toSerialize["maturity_amount"] = o.MaturityAmount
	}
	if true {
		toSerialize["tenure_days"] = o.TenureDays
	}
	if true {
		toSerialize["tenure_months"] = o.TenureMonths
	}
	if true {
		toSerialize["tenure_years"] = o.TenureYears
	}
	return json.Marshal(toSerialize)
}

type NullableTermDepositInformation struct {
	value *TermDepositInformation
	isSet bool
}

func (v NullableTermDepositInformation) Get() *TermDepositInformation {
	return v.value
}

func (v *NullableTermDepositInformation) Set(val *TermDepositInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableTermDepositInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableTermDepositInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTermDepositInformation(val *TermDepositInformation) *NullableTermDepositInformation {
	return &NullableTermDepositInformation{value: val, isSet: true}
}

func (v NullableTermDepositInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTermDepositInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


