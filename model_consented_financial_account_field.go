/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
)

// ConsentedFinancialAccountField ConsentedFinancialAccountField : Consented financial account field details.
type ConsentedFinancialAccountField struct {
	// Financial account field title.
	FieldTitle string `json:"fieldTitle"`
	// Financial account field slug.
	FieldSlug string `json:"fieldSlug"`
	// Requested financial account details.
	RequestedDetails []FinancialAccountDetailsRequired `json:"requestedDetails"`
	TransactionPeriod *ConsentedFinancialAccountFieldTransactionPeriod `json:"transactionPeriod,omitempty"`
	// Consented financial accounts.
	ConsentedAccounts []ConsentedFinancialAccount `json:"consentedAccounts"`
}

// NewConsentedFinancialAccountField instantiates a new ConsentedFinancialAccountField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsentedFinancialAccountField(fieldTitle string, fieldSlug string, requestedDetails []FinancialAccountDetailsRequired, consentedAccounts []ConsentedFinancialAccount) *ConsentedFinancialAccountField {
	this := ConsentedFinancialAccountField{}
	this.FieldTitle = fieldTitle
	this.FieldSlug = fieldSlug
	this.RequestedDetails = requestedDetails
	this.ConsentedAccounts = consentedAccounts
	return &this
}

// NewConsentedFinancialAccountFieldWithDefaults instantiates a new ConsentedFinancialAccountField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsentedFinancialAccountFieldWithDefaults() *ConsentedFinancialAccountField {
	this := ConsentedFinancialAccountField{}
	return &this
}

// GetFieldTitle returns the FieldTitle field value
func (o *ConsentedFinancialAccountField) GetFieldTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldTitle
}

// GetFieldTitleOk returns a tuple with the FieldTitle field value
// and a boolean to check if the value has been set.
func (o *ConsentedFinancialAccountField) GetFieldTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldTitle, true
}

// SetFieldTitle sets field value
func (o *ConsentedFinancialAccountField) SetFieldTitle(v string) {
	o.FieldTitle = v
}

// GetFieldSlug returns the FieldSlug field value
func (o *ConsentedFinancialAccountField) GetFieldSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldSlug
}

// GetFieldSlugOk returns a tuple with the FieldSlug field value
// and a boolean to check if the value has been set.
func (o *ConsentedFinancialAccountField) GetFieldSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldSlug, true
}

// SetFieldSlug sets field value
func (o *ConsentedFinancialAccountField) SetFieldSlug(v string) {
	o.FieldSlug = v
}

// GetRequestedDetails returns the RequestedDetails field value
func (o *ConsentedFinancialAccountField) GetRequestedDetails() []FinancialAccountDetailsRequired {
	if o == nil {
		var ret []FinancialAccountDetailsRequired
		return ret
	}

	return o.RequestedDetails
}

// GetRequestedDetailsOk returns a tuple with the RequestedDetails field value
// and a boolean to check if the value has been set.
func (o *ConsentedFinancialAccountField) GetRequestedDetailsOk() ([]FinancialAccountDetailsRequired, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestedDetails, true
}

// SetRequestedDetails sets field value
func (o *ConsentedFinancialAccountField) SetRequestedDetails(v []FinancialAccountDetailsRequired) {
	o.RequestedDetails = v
}

// GetTransactionPeriod returns the TransactionPeriod field value if set, zero value otherwise.
func (o *ConsentedFinancialAccountField) GetTransactionPeriod() ConsentedFinancialAccountFieldTransactionPeriod {
	if o == nil || o.TransactionPeriod == nil {
		var ret ConsentedFinancialAccountFieldTransactionPeriod
		return ret
	}
	return *o.TransactionPeriod
}

// GetTransactionPeriodOk returns a tuple with the TransactionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsentedFinancialAccountField) GetTransactionPeriodOk() (*ConsentedFinancialAccountFieldTransactionPeriod, bool) {
	if o == nil || o.TransactionPeriod == nil {
		return nil, false
	}
	return o.TransactionPeriod, true
}

// HasTransactionPeriod returns a boolean if a field has been set.
func (o *ConsentedFinancialAccountField) HasTransactionPeriod() bool {
	if o != nil && o.TransactionPeriod != nil {
		return true
	}

	return false
}

// SetTransactionPeriod gets a reference to the given ConsentedFinancialAccountFieldTransactionPeriod and assigns it to the TransactionPeriod field.
func (o *ConsentedFinancialAccountField) SetTransactionPeriod(v ConsentedFinancialAccountFieldTransactionPeriod) {
	o.TransactionPeriod = &v
}

// GetConsentedAccounts returns the ConsentedAccounts field value
func (o *ConsentedFinancialAccountField) GetConsentedAccounts() []ConsentedFinancialAccount {
	if o == nil {
		var ret []ConsentedFinancialAccount
		return ret
	}

	return o.ConsentedAccounts
}

// GetConsentedAccountsOk returns a tuple with the ConsentedAccounts field value
// and a boolean to check if the value has been set.
func (o *ConsentedFinancialAccountField) GetConsentedAccountsOk() ([]ConsentedFinancialAccount, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConsentedAccounts, true
}

// SetConsentedAccounts sets field value
func (o *ConsentedFinancialAccountField) SetConsentedAccounts(v []ConsentedFinancialAccount) {
	o.ConsentedAccounts = v
}

func (o ConsentedFinancialAccountField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fieldTitle"] = o.FieldTitle
	}
	if true {
		toSerialize["fieldSlug"] = o.FieldSlug
	}
	if true {
		toSerialize["requestedDetails"] = o.RequestedDetails
	}
	if o.TransactionPeriod != nil {
		toSerialize["transactionPeriod"] = o.TransactionPeriod
	}
	if true {
		toSerialize["consentedAccounts"] = o.ConsentedAccounts
	}
	return json.Marshal(toSerialize)
}

type NullableConsentedFinancialAccountField struct {
	value *ConsentedFinancialAccountField
	isSet bool
}

func (v NullableConsentedFinancialAccountField) Get() *ConsentedFinancialAccountField {
	return v.value
}

func (v *NullableConsentedFinancialAccountField) Set(val *ConsentedFinancialAccountField) {
	v.value = val
	v.isSet = true
}

func (v NullableConsentedFinancialAccountField) IsSet() bool {
	return v.isSet
}

func (v *NullableConsentedFinancialAccountField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsentedFinancialAccountField(val *ConsentedFinancialAccountField) *NullableConsentedFinancialAccountField {
	return &NullableConsentedFinancialAccountField{value: val, isSet: true}
}

func (v NullableConsentedFinancialAccountField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsentedFinancialAccountField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


