/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
)

// DataProvider struct for DataProvider
type DataProvider struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Category string `json:"category"`
	LogoUrl *string `json:"logoUrl,omitempty"`
	Website *string `json:"website,omitempty"`
	SupportEmail *string `json:"supportEmail,omitempty"`
	HelpLineNumber *string `json:"helpLineNumber,omitempty"`
	PrivacyPolicy *string `json:"privacyPolicy,omitempty"`
	TermOfService *string `json:"termOfService,omitempty"`
	DataProtectionOfficer DataProtectionOfficer `json:"dataProtectionOfficer"`
}

// NewDataProvider instantiates a new DataProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataProvider(id string, name string, category string, dataProtectionOfficer DataProtectionOfficer) *DataProvider {
	this := DataProvider{}
	this.Id = id
	this.Name = name
	this.Category = category
	this.DataProtectionOfficer = dataProtectionOfficer
	return &this
}

// NewDataProviderWithDefaults instantiates a new DataProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataProviderWithDefaults() *DataProvider {
	this := DataProvider{}
	return &this
}

// GetId returns the Id field value
func (o *DataProvider) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DataProvider) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DataProvider) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *DataProvider) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DataProvider) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DataProvider) SetName(v string) {
	o.Name = v
}

// GetCategory returns the Category field value
func (o *DataProvider) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *DataProvider) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *DataProvider) SetCategory(v string) {
	o.Category = v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *DataProvider) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataProvider) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *DataProvider) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *DataProvider) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *DataProvider) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataProvider) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *DataProvider) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *DataProvider) SetWebsite(v string) {
	o.Website = &v
}

// GetSupportEmail returns the SupportEmail field value if set, zero value otherwise.
func (o *DataProvider) GetSupportEmail() string {
	if o == nil || o.SupportEmail == nil {
		var ret string
		return ret
	}
	return *o.SupportEmail
}

// GetSupportEmailOk returns a tuple with the SupportEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataProvider) GetSupportEmailOk() (*string, bool) {
	if o == nil || o.SupportEmail == nil {
		return nil, false
	}
	return o.SupportEmail, true
}

// HasSupportEmail returns a boolean if a field has been set.
func (o *DataProvider) HasSupportEmail() bool {
	if o != nil && o.SupportEmail != nil {
		return true
	}

	return false
}

// SetSupportEmail gets a reference to the given string and assigns it to the SupportEmail field.
func (o *DataProvider) SetSupportEmail(v string) {
	o.SupportEmail = &v
}

// GetHelpLineNumber returns the HelpLineNumber field value if set, zero value otherwise.
func (o *DataProvider) GetHelpLineNumber() string {
	if o == nil || o.HelpLineNumber == nil {
		var ret string
		return ret
	}
	return *o.HelpLineNumber
}

// GetHelpLineNumberOk returns a tuple with the HelpLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataProvider) GetHelpLineNumberOk() (*string, bool) {
	if o == nil || o.HelpLineNumber == nil {
		return nil, false
	}
	return o.HelpLineNumber, true
}

// HasHelpLineNumber returns a boolean if a field has been set.
func (o *DataProvider) HasHelpLineNumber() bool {
	if o != nil && o.HelpLineNumber != nil {
		return true
	}

	return false
}

// SetHelpLineNumber gets a reference to the given string and assigns it to the HelpLineNumber field.
func (o *DataProvider) SetHelpLineNumber(v string) {
	o.HelpLineNumber = &v
}

// GetPrivacyPolicy returns the PrivacyPolicy field value if set, zero value otherwise.
func (o *DataProvider) GetPrivacyPolicy() string {
	if o == nil || o.PrivacyPolicy == nil {
		var ret string
		return ret
	}
	return *o.PrivacyPolicy
}

// GetPrivacyPolicyOk returns a tuple with the PrivacyPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataProvider) GetPrivacyPolicyOk() (*string, bool) {
	if o == nil || o.PrivacyPolicy == nil {
		return nil, false
	}
	return o.PrivacyPolicy, true
}

// HasPrivacyPolicy returns a boolean if a field has been set.
func (o *DataProvider) HasPrivacyPolicy() bool {
	if o != nil && o.PrivacyPolicy != nil {
		return true
	}

	return false
}

// SetPrivacyPolicy gets a reference to the given string and assigns it to the PrivacyPolicy field.
func (o *DataProvider) SetPrivacyPolicy(v string) {
	o.PrivacyPolicy = &v
}

// GetTermOfService returns the TermOfService field value if set, zero value otherwise.
func (o *DataProvider) GetTermOfService() string {
	if o == nil || o.TermOfService == nil {
		var ret string
		return ret
	}
	return *o.TermOfService
}

// GetTermOfServiceOk returns a tuple with the TermOfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataProvider) GetTermOfServiceOk() (*string, bool) {
	if o == nil || o.TermOfService == nil {
		return nil, false
	}
	return o.TermOfService, true
}

// HasTermOfService returns a boolean if a field has been set.
func (o *DataProvider) HasTermOfService() bool {
	if o != nil && o.TermOfService != nil {
		return true
	}

	return false
}

// SetTermOfService gets a reference to the given string and assigns it to the TermOfService field.
func (o *DataProvider) SetTermOfService(v string) {
	o.TermOfService = &v
}

// GetDataProtectionOfficer returns the DataProtectionOfficer field value
func (o *DataProvider) GetDataProtectionOfficer() DataProtectionOfficer {
	if o == nil {
		var ret DataProtectionOfficer
		return ret
	}

	return o.DataProtectionOfficer
}

// GetDataProtectionOfficerOk returns a tuple with the DataProtectionOfficer field value
// and a boolean to check if the value has been set.
func (o *DataProvider) GetDataProtectionOfficerOk() (*DataProtectionOfficer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataProtectionOfficer, true
}

// SetDataProtectionOfficer sets field value
func (o *DataProvider) SetDataProtectionOfficer(v DataProtectionOfficer) {
	o.DataProtectionOfficer = v
}

func (o DataProvider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if o.LogoUrl != nil {
		toSerialize["logoUrl"] = o.LogoUrl
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.SupportEmail != nil {
		toSerialize["supportEmail"] = o.SupportEmail
	}
	if o.HelpLineNumber != nil {
		toSerialize["helpLineNumber"] = o.HelpLineNumber
	}
	if o.PrivacyPolicy != nil {
		toSerialize["privacyPolicy"] = o.PrivacyPolicy
	}
	if o.TermOfService != nil {
		toSerialize["termOfService"] = o.TermOfService
	}
	if true {
		toSerialize["dataProtectionOfficer"] = o.DataProtectionOfficer
	}
	return json.Marshal(toSerialize)
}

type NullableDataProvider struct {
	value *DataProvider
	isSet bool
}

func (v NullableDataProvider) Get() *DataProvider {
	return v.value
}

func (v *NullableDataProvider) Set(val *DataProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableDataProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableDataProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataProvider(val *DataProvider) *NullableDataProvider {
	return &NullableDataProvider{value: val, isSet: true}
}

func (v NullableDataProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


