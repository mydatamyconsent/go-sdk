/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
	"time"
)

// CreditCardHolder struct for CreditCardHolder
type CreditCardHolder struct {
	Id string `json:"id"`
	CreditCardId string `json:"creditCardId"`
	Name string `json:"name"`
	Dob time.Time `json:"dob"`
	Mobile string `json:"mobile"`
	Nominee HoldingNominee `json:"nominee"`
	Landline *string `json:"landline,omitempty"`
	Address string `json:"address"`
	Email string `json:"email"`
	Pan string `json:"pan"`
	CkycCompliance bool `json:"ckycCompliance"`
}

// NewCreditCardHolder instantiates a new CreditCardHolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditCardHolder(id string, creditCardId string, name string, dob time.Time, mobile string, nominee HoldingNominee, address string, email string, pan string, ckycCompliance bool) *CreditCardHolder {
	this := CreditCardHolder{}
	this.Id = id
	this.CreditCardId = creditCardId
	this.Name = name
	this.Dob = dob
	this.Mobile = mobile
	this.Nominee = nominee
	this.Address = address
	this.Email = email
	this.Pan = pan
	this.CkycCompliance = ckycCompliance
	return &this
}

// NewCreditCardHolderWithDefaults instantiates a new CreditCardHolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditCardHolderWithDefaults() *CreditCardHolder {
	this := CreditCardHolder{}
	return &this
}

// GetId returns the Id field value
func (o *CreditCardHolder) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreditCardHolder) SetId(v string) {
	o.Id = v
}

// GetCreditCardId returns the CreditCardId field value
func (o *CreditCardHolder) GetCreditCardId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreditCardId
}

// GetCreditCardIdOk returns a tuple with the CreditCardId field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetCreditCardIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditCardId, true
}

// SetCreditCardId sets field value
func (o *CreditCardHolder) SetCreditCardId(v string) {
	o.CreditCardId = v
}

// GetName returns the Name field value
func (o *CreditCardHolder) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreditCardHolder) SetName(v string) {
	o.Name = v
}

// GetDob returns the Dob field value
func (o *CreditCardHolder) GetDob() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Dob
}

// GetDobOk returns a tuple with the Dob field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetDobOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dob, true
}

// SetDob sets field value
func (o *CreditCardHolder) SetDob(v time.Time) {
	o.Dob = v
}

// GetMobile returns the Mobile field value
func (o *CreditCardHolder) GetMobile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetMobileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mobile, true
}

// SetMobile sets field value
func (o *CreditCardHolder) SetMobile(v string) {
	o.Mobile = v
}

// GetNominee returns the Nominee field value
func (o *CreditCardHolder) GetNominee() HoldingNominee {
	if o == nil {
		var ret HoldingNominee
		return ret
	}

	return o.Nominee
}

// GetNomineeOk returns a tuple with the Nominee field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetNomineeOk() (*HoldingNominee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nominee, true
}

// SetNominee sets field value
func (o *CreditCardHolder) SetNominee(v HoldingNominee) {
	o.Nominee = v
}

// GetLandline returns the Landline field value if set, zero value otherwise.
func (o *CreditCardHolder) GetLandline() string {
	if o == nil || o.Landline == nil {
		var ret string
		return ret
	}
	return *o.Landline
}

// GetLandlineOk returns a tuple with the Landline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetLandlineOk() (*string, bool) {
	if o == nil || o.Landline == nil {
		return nil, false
	}
	return o.Landline, true
}

// HasLandline returns a boolean if a field has been set.
func (o *CreditCardHolder) HasLandline() bool {
	if o != nil && o.Landline != nil {
		return true
	}

	return false
}

// SetLandline gets a reference to the given string and assigns it to the Landline field.
func (o *CreditCardHolder) SetLandline(v string) {
	o.Landline = &v
}

// GetAddress returns the Address field value
func (o *CreditCardHolder) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *CreditCardHolder) SetAddress(v string) {
	o.Address = v
}

// GetEmail returns the Email field value
func (o *CreditCardHolder) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreditCardHolder) SetEmail(v string) {
	o.Email = v
}

// GetPan returns the Pan field value
func (o *CreditCardHolder) GetPan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pan
}

// GetPanOk returns a tuple with the Pan field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetPanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pan, true
}

// SetPan sets field value
func (o *CreditCardHolder) SetPan(v string) {
	o.Pan = v
}

// GetCkycCompliance returns the CkycCompliance field value
func (o *CreditCardHolder) GetCkycCompliance() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CkycCompliance
}

// GetCkycComplianceOk returns a tuple with the CkycCompliance field value
// and a boolean to check if the value has been set.
func (o *CreditCardHolder) GetCkycComplianceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CkycCompliance, true
}

// SetCkycCompliance sets field value
func (o *CreditCardHolder) SetCkycCompliance(v bool) {
	o.CkycCompliance = v
}

func (o CreditCardHolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["creditCardId"] = o.CreditCardId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["dob"] = o.Dob
	}
	if true {
		toSerialize["mobile"] = o.Mobile
	}
	if true {
		toSerialize["nominee"] = o.Nominee
	}
	if o.Landline != nil {
		toSerialize["landline"] = o.Landline
	}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["pan"] = o.Pan
	}
	if true {
		toSerialize["ckycCompliance"] = o.CkycCompliance
	}
	return json.Marshal(toSerialize)
}

type NullableCreditCardHolder struct {
	value *CreditCardHolder
	isSet bool
}

func (v NullableCreditCardHolder) Get() *CreditCardHolder {
	return v.value
}

func (v *NullableCreditCardHolder) Set(val *CreditCardHolder) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditCardHolder) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditCardHolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditCardHolder(val *CreditCardHolder) *NullableCreditCardHolder {
	return &NullableCreditCardHolder{value: val, isSet: true}
}

func (v NullableCreditCardHolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditCardHolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


