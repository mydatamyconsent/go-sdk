/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
	"time"
)

// FinancialAccountCreditCardTransaction struct for FinancialAccountCreditCardTransaction
type FinancialAccountCreditCardTransaction struct {
	Type string `json:"type"`
	Id string `json:"id"`
	TxnType CreditCardTransactionType `json:"txn_type"`
	TxnDate time.Time `json:"txn_date"`
	Amount float32 `json:"amount"`
	ValueDate time.Time `json:"value_date"`
	Narration string `json:"narration"`
	StatementDate time.Time `json:"statement_date"`
	Mcc string `json:"mcc"`
	MaskedCardNumber string `json:"masked_card_number"`
}

// NewFinancialAccountCreditCardTransaction instantiates a new FinancialAccountCreditCardTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialAccountCreditCardTransaction(type_ string, id string, txnType CreditCardTransactionType, txnDate time.Time, amount float32, valueDate time.Time, narration string, statementDate time.Time, mcc string, maskedCardNumber string) *FinancialAccountCreditCardTransaction {
	this := FinancialAccountCreditCardTransaction{}
	this.Type = type_
	this.Id = id
	this.TxnType = txnType
	this.TxnDate = txnDate
	this.Amount = amount
	this.ValueDate = valueDate
	this.Narration = narration
	this.StatementDate = statementDate
	this.Mcc = mcc
	this.MaskedCardNumber = maskedCardNumber
	return &this
}

// NewFinancialAccountCreditCardTransactionWithDefaults instantiates a new FinancialAccountCreditCardTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialAccountCreditCardTransactionWithDefaults() *FinancialAccountCreditCardTransaction {
	this := FinancialAccountCreditCardTransaction{}
	return &this
}

// GetType returns the Type field value
func (o *FinancialAccountCreditCardTransaction) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FinancialAccountCreditCardTransaction) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *FinancialAccountCreditCardTransaction) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FinancialAccountCreditCardTransaction) SetId(v string) {
	o.Id = v
}

// GetTxnType returns the TxnType field value
func (o *FinancialAccountCreditCardTransaction) GetTxnType() CreditCardTransactionType {
	if o == nil {
		var ret CreditCardTransactionType
		return ret
	}

	return o.TxnType
}

// GetTxnTypeOk returns a tuple with the TxnType field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetTxnTypeOk() (*CreditCardTransactionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxnType, true
}

// SetTxnType sets field value
func (o *FinancialAccountCreditCardTransaction) SetTxnType(v CreditCardTransactionType) {
	o.TxnType = v
}

// GetTxnDate returns the TxnDate field value
func (o *FinancialAccountCreditCardTransaction) GetTxnDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TxnDate
}

// GetTxnDateOk returns a tuple with the TxnDate field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetTxnDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxnDate, true
}

// SetTxnDate sets field value
func (o *FinancialAccountCreditCardTransaction) SetTxnDate(v time.Time) {
	o.TxnDate = v
}

// GetAmount returns the Amount field value
func (o *FinancialAccountCreditCardTransaction) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *FinancialAccountCreditCardTransaction) SetAmount(v float32) {
	o.Amount = v
}

// GetValueDate returns the ValueDate field value
func (o *FinancialAccountCreditCardTransaction) GetValueDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ValueDate
}

// GetValueDateOk returns a tuple with the ValueDate field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetValueDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueDate, true
}

// SetValueDate sets field value
func (o *FinancialAccountCreditCardTransaction) SetValueDate(v time.Time) {
	o.ValueDate = v
}

// GetNarration returns the Narration field value
func (o *FinancialAccountCreditCardTransaction) GetNarration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Narration
}

// GetNarrationOk returns a tuple with the Narration field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetNarrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Narration, true
}

// SetNarration sets field value
func (o *FinancialAccountCreditCardTransaction) SetNarration(v string) {
	o.Narration = v
}

// GetStatementDate returns the StatementDate field value
func (o *FinancialAccountCreditCardTransaction) GetStatementDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StatementDate
}

// GetStatementDateOk returns a tuple with the StatementDate field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetStatementDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatementDate, true
}

// SetStatementDate sets field value
func (o *FinancialAccountCreditCardTransaction) SetStatementDate(v time.Time) {
	o.StatementDate = v
}

// GetMcc returns the Mcc field value
func (o *FinancialAccountCreditCardTransaction) GetMcc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mcc
}

// GetMccOk returns a tuple with the Mcc field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetMccOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mcc, true
}

// SetMcc sets field value
func (o *FinancialAccountCreditCardTransaction) SetMcc(v string) {
	o.Mcc = v
}

// GetMaskedCardNumber returns the MaskedCardNumber field value
func (o *FinancialAccountCreditCardTransaction) GetMaskedCardNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaskedCardNumber
}

// GetMaskedCardNumberOk returns a tuple with the MaskedCardNumber field value
// and a boolean to check if the value has been set.
func (o *FinancialAccountCreditCardTransaction) GetMaskedCardNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaskedCardNumber, true
}

// SetMaskedCardNumber sets field value
func (o *FinancialAccountCreditCardTransaction) SetMaskedCardNumber(v string) {
	o.MaskedCardNumber = v
}

func (o FinancialAccountCreditCardTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["txn_type"] = o.TxnType
	}
	if true {
		toSerialize["txn_date"] = o.TxnDate
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["value_date"] = o.ValueDate
	}
	if true {
		toSerialize["narration"] = o.Narration
	}
	if true {
		toSerialize["statement_date"] = o.StatementDate
	}
	if true {
		toSerialize["mcc"] = o.Mcc
	}
	if true {
		toSerialize["masked_card_number"] = o.MaskedCardNumber
	}
	return json.Marshal(toSerialize)
}

type NullableFinancialAccountCreditCardTransaction struct {
	value *FinancialAccountCreditCardTransaction
	isSet bool
}

func (v NullableFinancialAccountCreditCardTransaction) Get() *FinancialAccountCreditCardTransaction {
	return v.value
}

func (v *NullableFinancialAccountCreditCardTransaction) Set(val *FinancialAccountCreditCardTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialAccountCreditCardTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialAccountCreditCardTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialAccountCreditCardTransaction(val *FinancialAccountCreditCardTransaction) *NullableFinancialAccountCreditCardTransaction {
	return &NullableFinancialAccountCreditCardTransaction{value: val, isSet: true}
}

func (v NullableFinancialAccountCreditCardTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialAccountCreditCardTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


