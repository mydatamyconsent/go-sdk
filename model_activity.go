/*
My Data My Consent - Developer API

Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: v1
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/go-sdk

import (
	"encoding/json"
	"time"
)

// Activity struct for Activity
type Activity struct {
	ActorName NullableString `json:"actorName,omitempty"`
	Description NullableString `json:"description,omitempty"`
	ActorProfileUrl NullableString `json:"actorProfileUrl,omitempty"`
	DateTimeUtc *time.Time `json:"dateTimeUtc,omitempty"`
}

// NewActivity instantiates a new Activity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivity() *Activity {
	this := Activity{}
	return &this
}

// NewActivityWithDefaults instantiates a new Activity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityWithDefaults() *Activity {
	this := Activity{}
	return &this
}

// GetActorName returns the ActorName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Activity) GetActorName() string {
	if o == nil || o.ActorName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ActorName.Get()
}

// GetActorNameOk returns a tuple with the ActorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Activity) GetActorNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActorName.Get(), o.ActorName.IsSet()
}

// HasActorName returns a boolean if a field has been set.
func (o *Activity) HasActorName() bool {
	if o != nil && o.ActorName.IsSet() {
		return true
	}

	return false
}

// SetActorName gets a reference to the given NullableString and assigns it to the ActorName field.
func (o *Activity) SetActorName(v string) {
	o.ActorName.Set(&v)
}
// SetActorNameNil sets the value for ActorName to be an explicit nil
func (o *Activity) SetActorNameNil() {
	o.ActorName.Set(nil)
}

// UnsetActorName ensures that no value is present for ActorName, not even an explicit nil
func (o *Activity) UnsetActorName() {
	o.ActorName.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Activity) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Activity) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Activity) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Activity) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Activity) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Activity) UnsetDescription() {
	o.Description.Unset()
}

// GetActorProfileUrl returns the ActorProfileUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Activity) GetActorProfileUrl() string {
	if o == nil || o.ActorProfileUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ActorProfileUrl.Get()
}

// GetActorProfileUrlOk returns a tuple with the ActorProfileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Activity) GetActorProfileUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActorProfileUrl.Get(), o.ActorProfileUrl.IsSet()
}

// HasActorProfileUrl returns a boolean if a field has been set.
func (o *Activity) HasActorProfileUrl() bool {
	if o != nil && o.ActorProfileUrl.IsSet() {
		return true
	}

	return false
}

// SetActorProfileUrl gets a reference to the given NullableString and assigns it to the ActorProfileUrl field.
func (o *Activity) SetActorProfileUrl(v string) {
	o.ActorProfileUrl.Set(&v)
}
// SetActorProfileUrlNil sets the value for ActorProfileUrl to be an explicit nil
func (o *Activity) SetActorProfileUrlNil() {
	o.ActorProfileUrl.Set(nil)
}

// UnsetActorProfileUrl ensures that no value is present for ActorProfileUrl, not even an explicit nil
func (o *Activity) UnsetActorProfileUrl() {
	o.ActorProfileUrl.Unset()
}

// GetDateTimeUtc returns the DateTimeUtc field value if set, zero value otherwise.
func (o *Activity) GetDateTimeUtc() time.Time {
	if o == nil || o.DateTimeUtc == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeUtc
}

// GetDateTimeUtcOk returns a tuple with the DateTimeUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity) GetDateTimeUtcOk() (*time.Time, bool) {
	if o == nil || o.DateTimeUtc == nil {
		return nil, false
	}
	return o.DateTimeUtc, true
}

// HasDateTimeUtc returns a boolean if a field has been set.
func (o *Activity) HasDateTimeUtc() bool {
	if o != nil && o.DateTimeUtc != nil {
		return true
	}

	return false
}

// SetDateTimeUtc gets a reference to the given time.Time and assigns it to the DateTimeUtc field.
func (o *Activity) SetDateTimeUtc(v time.Time) {
	o.DateTimeUtc = &v
}

func (o Activity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActorName.IsSet() {
		toSerialize["actorName"] = o.ActorName.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ActorProfileUrl.IsSet() {
		toSerialize["actorProfileUrl"] = o.ActorProfileUrl.Get()
	}
	if o.DateTimeUtc != nil {
		toSerialize["dateTimeUtc"] = o.DateTimeUtc
	}
	return json.Marshal(toSerialize)
}

type NullableActivity struct {
	value *Activity
	isSet bool
}

func (v NullableActivity) Get() *Activity {
	return v.value
}

func (v *NullableActivity) Set(val *Activity) {
	v.value = val
	v.isSet = true
}

func (v NullableActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivity(val *Activity) *NullableActivity {
	return &NullableActivity{value: val, isSet: true}
}

func (v NullableActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


