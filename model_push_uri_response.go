/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
)

// PushUriResponse struct for PushUriResponse
type PushUriResponse struct {
	ResponseStatus *string `json:"responseStatus,omitempty"`
	ResponseMessage *string `json:"responseMessage,omitempty"`
	Ns2 *string `json:"ns2,omitempty"`
	Ver *string `json:"ver,omitempty"`
	Ts *string `json:"ts,omitempty"`
	Txn *string `json:"txn,omitempty"`
	OrgId *string `json:"orgId,omitempty"`
}

// NewPushUriResponse instantiates a new PushUriResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushUriResponse() *PushUriResponse {
	this := PushUriResponse{}
	return &this
}

// NewPushUriResponseWithDefaults instantiates a new PushUriResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushUriResponseWithDefaults() *PushUriResponse {
	this := PushUriResponse{}
	return &this
}

// GetResponseStatus returns the ResponseStatus field value if set, zero value otherwise.
func (o *PushUriResponse) GetResponseStatus() string {
	if o == nil || o.ResponseStatus == nil {
		var ret string
		return ret
	}
	return *o.ResponseStatus
}

// GetResponseStatusOk returns a tuple with the ResponseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushUriResponse) GetResponseStatusOk() (*string, bool) {
	if o == nil || o.ResponseStatus == nil {
		return nil, false
	}
	return o.ResponseStatus, true
}

// HasResponseStatus returns a boolean if a field has been set.
func (o *PushUriResponse) HasResponseStatus() bool {
	if o != nil && o.ResponseStatus != nil {
		return true
	}

	return false
}

// SetResponseStatus gets a reference to the given string and assigns it to the ResponseStatus field.
func (o *PushUriResponse) SetResponseStatus(v string) {
	o.ResponseStatus = &v
}

// GetResponseMessage returns the ResponseMessage field value if set, zero value otherwise.
func (o *PushUriResponse) GetResponseMessage() string {
	if o == nil || o.ResponseMessage == nil {
		var ret string
		return ret
	}
	return *o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushUriResponse) GetResponseMessageOk() (*string, bool) {
	if o == nil || o.ResponseMessage == nil {
		return nil, false
	}
	return o.ResponseMessage, true
}

// HasResponseMessage returns a boolean if a field has been set.
func (o *PushUriResponse) HasResponseMessage() bool {
	if o != nil && o.ResponseMessage != nil {
		return true
	}

	return false
}

// SetResponseMessage gets a reference to the given string and assigns it to the ResponseMessage field.
func (o *PushUriResponse) SetResponseMessage(v string) {
	o.ResponseMessage = &v
}

// GetNs2 returns the Ns2 field value if set, zero value otherwise.
func (o *PushUriResponse) GetNs2() string {
	if o == nil || o.Ns2 == nil {
		var ret string
		return ret
	}
	return *o.Ns2
}

// GetNs2Ok returns a tuple with the Ns2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushUriResponse) GetNs2Ok() (*string, bool) {
	if o == nil || o.Ns2 == nil {
		return nil, false
	}
	return o.Ns2, true
}

// HasNs2 returns a boolean if a field has been set.
func (o *PushUriResponse) HasNs2() bool {
	if o != nil && o.Ns2 != nil {
		return true
	}

	return false
}

// SetNs2 gets a reference to the given string and assigns it to the Ns2 field.
func (o *PushUriResponse) SetNs2(v string) {
	o.Ns2 = &v
}

// GetVer returns the Ver field value if set, zero value otherwise.
func (o *PushUriResponse) GetVer() string {
	if o == nil || o.Ver == nil {
		var ret string
		return ret
	}
	return *o.Ver
}

// GetVerOk returns a tuple with the Ver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushUriResponse) GetVerOk() (*string, bool) {
	if o == nil || o.Ver == nil {
		return nil, false
	}
	return o.Ver, true
}

// HasVer returns a boolean if a field has been set.
func (o *PushUriResponse) HasVer() bool {
	if o != nil && o.Ver != nil {
		return true
	}

	return false
}

// SetVer gets a reference to the given string and assigns it to the Ver field.
func (o *PushUriResponse) SetVer(v string) {
	o.Ver = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *PushUriResponse) GetTs() string {
	if o == nil || o.Ts == nil {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushUriResponse) GetTsOk() (*string, bool) {
	if o == nil || o.Ts == nil {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *PushUriResponse) HasTs() bool {
	if o != nil && o.Ts != nil {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *PushUriResponse) SetTs(v string) {
	o.Ts = &v
}

// GetTxn returns the Txn field value if set, zero value otherwise.
func (o *PushUriResponse) GetTxn() string {
	if o == nil || o.Txn == nil {
		var ret string
		return ret
	}
	return *o.Txn
}

// GetTxnOk returns a tuple with the Txn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushUriResponse) GetTxnOk() (*string, bool) {
	if o == nil || o.Txn == nil {
		return nil, false
	}
	return o.Txn, true
}

// HasTxn returns a boolean if a field has been set.
func (o *PushUriResponse) HasTxn() bool {
	if o != nil && o.Txn != nil {
		return true
	}

	return false
}

// SetTxn gets a reference to the given string and assigns it to the Txn field.
func (o *PushUriResponse) SetTxn(v string) {
	o.Txn = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *PushUriResponse) GetOrgId() string {
	if o == nil || o.OrgId == nil {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushUriResponse) GetOrgIdOk() (*string, bool) {
	if o == nil || o.OrgId == nil {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *PushUriResponse) HasOrgId() bool {
	if o != nil && o.OrgId != nil {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *PushUriResponse) SetOrgId(v string) {
	o.OrgId = &v
}

func (o PushUriResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResponseStatus != nil {
		toSerialize["responseStatus"] = o.ResponseStatus
	}
	if o.ResponseMessage != nil {
		toSerialize["responseMessage"] = o.ResponseMessage
	}
	if o.Ns2 != nil {
		toSerialize["ns2"] = o.Ns2
	}
	if o.Ver != nil {
		toSerialize["ver"] = o.Ver
	}
	if o.Ts != nil {
		toSerialize["ts"] = o.Ts
	}
	if o.Txn != nil {
		toSerialize["txn"] = o.Txn
	}
	if o.OrgId != nil {
		toSerialize["orgId"] = o.OrgId
	}
	return json.Marshal(toSerialize)
}

type NullablePushUriResponse struct {
	value *PushUriResponse
	isSet bool
}

func (v NullablePushUriResponse) Get() *PushUriResponse {
	return v.value
}

func (v *NullablePushUriResponse) Set(val *PushUriResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePushUriResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePushUriResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushUriResponse(val *PushUriResponse) *NullablePushUriResponse {
	return &NullablePushUriResponse{value: val, isSet: true}
}

func (v NullablePushUriResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushUriResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


