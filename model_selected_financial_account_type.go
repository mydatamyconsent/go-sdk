/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
)

// SelectedFinancialAccountType SelectedFinancialAccountType : Selected financial account type of financial account field of consent request template.
type SelectedFinancialAccountType struct {
	SubCategory FinancialAccountSubCategoryType `json:"subCategory"`
	// DRNs.
	Drns []string `json:"drns"`
}

// NewSelectedFinancialAccountType instantiates a new SelectedFinancialAccountType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelectedFinancialAccountType(subCategory FinancialAccountSubCategoryType, drns []string) *SelectedFinancialAccountType {
	this := SelectedFinancialAccountType{}
	this.SubCategory = subCategory
	this.Drns = drns
	return &this
}

// NewSelectedFinancialAccountTypeWithDefaults instantiates a new SelectedFinancialAccountType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelectedFinancialAccountTypeWithDefaults() *SelectedFinancialAccountType {
	this := SelectedFinancialAccountType{}
	return &this
}

// GetSubCategory returns the SubCategory field value
func (o *SelectedFinancialAccountType) GetSubCategory() FinancialAccountSubCategoryType {
	if o == nil {
		var ret FinancialAccountSubCategoryType
		return ret
	}

	return o.SubCategory
}

// GetSubCategoryOk returns a tuple with the SubCategory field value
// and a boolean to check if the value has been set.
func (o *SelectedFinancialAccountType) GetSubCategoryOk() (*FinancialAccountSubCategoryType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubCategory, true
}

// SetSubCategory sets field value
func (o *SelectedFinancialAccountType) SetSubCategory(v FinancialAccountSubCategoryType) {
	o.SubCategory = v
}

// GetDrns returns the Drns field value
func (o *SelectedFinancialAccountType) GetDrns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Drns
}

// GetDrnsOk returns a tuple with the Drns field value
// and a boolean to check if the value has been set.
func (o *SelectedFinancialAccountType) GetDrnsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Drns, true
}

// SetDrns sets field value
func (o *SelectedFinancialAccountType) SetDrns(v []string) {
	o.Drns = v
}

func (o SelectedFinancialAccountType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subCategory"] = o.SubCategory
	}
	if true {
		toSerialize["drns"] = o.Drns
	}
	return json.Marshal(toSerialize)
}

type NullableSelectedFinancialAccountType struct {
	value *SelectedFinancialAccountType
	isSet bool
}

func (v NullableSelectedFinancialAccountType) Get() *SelectedFinancialAccountType {
	return v.value
}

func (v *NullableSelectedFinancialAccountType) Set(val *SelectedFinancialAccountType) {
	v.value = val
	v.isSet = true
}

func (v NullableSelectedFinancialAccountType) IsSet() bool {
	return v.isSet
}

func (v *NullableSelectedFinancialAccountType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelectedFinancialAccountType(val *SelectedFinancialAccountType) *NullableSelectedFinancialAccountType {
	return &NullableSelectedFinancialAccountType{value: val, isSet: true}
}

func (v NullableSelectedFinancialAccountType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelectedFinancialAccountType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


