/*
My Data My Consent - Developer API

Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: v1
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mydatamyconsent

import (
	"encoding/json"
)

// SuggestedAccountDto struct for SuggestedAccountDto
type SuggestedAccountDto struct {
	IssuerId *string `json:"issuerId,omitempty"`
	AccountId *string `json:"accountId,omitempty"`
	IssuerName NullableString `json:"issuerName,omitempty"`
	AccountLogoUrl NullableString `json:"accountLogoUrl,omitempty"`
	AccountNumber NullableString `json:"accountNumber,omitempty"`
	AccountCategory NullableString `json:"accountCategory,omitempty"`
}

// NewSuggestedAccountDto instantiates a new SuggestedAccountDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuggestedAccountDto() *SuggestedAccountDto {
	this := SuggestedAccountDto{}
	return &this
}

// NewSuggestedAccountDtoWithDefaults instantiates a new SuggestedAccountDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuggestedAccountDtoWithDefaults() *SuggestedAccountDto {
	this := SuggestedAccountDto{}
	return &this
}

// GetIssuerId returns the IssuerId field value if set, zero value otherwise.
func (o *SuggestedAccountDto) GetIssuerId() string {
	if o == nil || o.IssuerId == nil {
		var ret string
		return ret
	}
	return *o.IssuerId
}

// GetIssuerIdOk returns a tuple with the IssuerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestedAccountDto) GetIssuerIdOk() (*string, bool) {
	if o == nil || o.IssuerId == nil {
		return nil, false
	}
	return o.IssuerId, true
}

// HasIssuerId returns a boolean if a field has been set.
func (o *SuggestedAccountDto) HasIssuerId() bool {
	if o != nil && o.IssuerId != nil {
		return true
	}

	return false
}

// SetIssuerId gets a reference to the given string and assigns it to the IssuerId field.
func (o *SuggestedAccountDto) SetIssuerId(v string) {
	o.IssuerId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *SuggestedAccountDto) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestedAccountDto) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *SuggestedAccountDto) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *SuggestedAccountDto) SetAccountId(v string) {
	o.AccountId = &v
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SuggestedAccountDto) GetIssuerName() string {
	if o == nil || o.IssuerName.Get() == nil {
		var ret string
		return ret
	}
	return *o.IssuerName.Get()
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SuggestedAccountDto) GetIssuerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IssuerName.Get(), o.IssuerName.IsSet()
}

// HasIssuerName returns a boolean if a field has been set.
func (o *SuggestedAccountDto) HasIssuerName() bool {
	if o != nil && o.IssuerName.IsSet() {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given NullableString and assigns it to the IssuerName field.
func (o *SuggestedAccountDto) SetIssuerName(v string) {
	o.IssuerName.Set(&v)
}
// SetIssuerNameNil sets the value for IssuerName to be an explicit nil
func (o *SuggestedAccountDto) SetIssuerNameNil() {
	o.IssuerName.Set(nil)
}

// UnsetIssuerName ensures that no value is present for IssuerName, not even an explicit nil
func (o *SuggestedAccountDto) UnsetIssuerName() {
	o.IssuerName.Unset()
}

// GetAccountLogoUrl returns the AccountLogoUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SuggestedAccountDto) GetAccountLogoUrl() string {
	if o == nil || o.AccountLogoUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountLogoUrl.Get()
}

// GetAccountLogoUrlOk returns a tuple with the AccountLogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SuggestedAccountDto) GetAccountLogoUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountLogoUrl.Get(), o.AccountLogoUrl.IsSet()
}

// HasAccountLogoUrl returns a boolean if a field has been set.
func (o *SuggestedAccountDto) HasAccountLogoUrl() bool {
	if o != nil && o.AccountLogoUrl.IsSet() {
		return true
	}

	return false
}

// SetAccountLogoUrl gets a reference to the given NullableString and assigns it to the AccountLogoUrl field.
func (o *SuggestedAccountDto) SetAccountLogoUrl(v string) {
	o.AccountLogoUrl.Set(&v)
}
// SetAccountLogoUrlNil sets the value for AccountLogoUrl to be an explicit nil
func (o *SuggestedAccountDto) SetAccountLogoUrlNil() {
	o.AccountLogoUrl.Set(nil)
}

// UnsetAccountLogoUrl ensures that no value is present for AccountLogoUrl, not even an explicit nil
func (o *SuggestedAccountDto) UnsetAccountLogoUrl() {
	o.AccountLogoUrl.Unset()
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SuggestedAccountDto) GetAccountNumber() string {
	if o == nil || o.AccountNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber.Get()
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SuggestedAccountDto) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountNumber.Get(), o.AccountNumber.IsSet()
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *SuggestedAccountDto) HasAccountNumber() bool {
	if o != nil && o.AccountNumber.IsSet() {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given NullableString and assigns it to the AccountNumber field.
func (o *SuggestedAccountDto) SetAccountNumber(v string) {
	o.AccountNumber.Set(&v)
}
// SetAccountNumberNil sets the value for AccountNumber to be an explicit nil
func (o *SuggestedAccountDto) SetAccountNumberNil() {
	o.AccountNumber.Set(nil)
}

// UnsetAccountNumber ensures that no value is present for AccountNumber, not even an explicit nil
func (o *SuggestedAccountDto) UnsetAccountNumber() {
	o.AccountNumber.Unset()
}

// GetAccountCategory returns the AccountCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SuggestedAccountDto) GetAccountCategory() string {
	if o == nil || o.AccountCategory.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountCategory.Get()
}

// GetAccountCategoryOk returns a tuple with the AccountCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SuggestedAccountDto) GetAccountCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountCategory.Get(), o.AccountCategory.IsSet()
}

// HasAccountCategory returns a boolean if a field has been set.
func (o *SuggestedAccountDto) HasAccountCategory() bool {
	if o != nil && o.AccountCategory.IsSet() {
		return true
	}

	return false
}

// SetAccountCategory gets a reference to the given NullableString and assigns it to the AccountCategory field.
func (o *SuggestedAccountDto) SetAccountCategory(v string) {
	o.AccountCategory.Set(&v)
}
// SetAccountCategoryNil sets the value for AccountCategory to be an explicit nil
func (o *SuggestedAccountDto) SetAccountCategoryNil() {
	o.AccountCategory.Set(nil)
}

// UnsetAccountCategory ensures that no value is present for AccountCategory, not even an explicit nil
func (o *SuggestedAccountDto) UnsetAccountCategory() {
	o.AccountCategory.Unset()
}

func (o SuggestedAccountDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IssuerId != nil {
		toSerialize["issuerId"] = o.IssuerId
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.IssuerName.IsSet() {
		toSerialize["issuerName"] = o.IssuerName.Get()
	}
	if o.AccountLogoUrl.IsSet() {
		toSerialize["accountLogoUrl"] = o.AccountLogoUrl.Get()
	}
	if o.AccountNumber.IsSet() {
		toSerialize["accountNumber"] = o.AccountNumber.Get()
	}
	if o.AccountCategory.IsSet() {
		toSerialize["accountCategory"] = o.AccountCategory.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSuggestedAccountDto struct {
	value *SuggestedAccountDto
	isSet bool
}

func (v NullableSuggestedAccountDto) Get() *SuggestedAccountDto {
	return v.value
}

func (v *NullableSuggestedAccountDto) Set(val *SuggestedAccountDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSuggestedAccountDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSuggestedAccountDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuggestedAccountDto(val *SuggestedAccountDto) *NullableSuggestedAccountDto {
	return &NullableSuggestedAccountDto{value: val, isSet: true}
}

func (v NullableSuggestedAccountDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuggestedAccountDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


