/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
	"time"
)

// MutualFundTransaction struct for MutualFundTransaction
type MutualFundTransaction struct {
	Id string `json:"id"`
	Amc string `json:"amc"`
	Registrar string `json:"registrar"`
	SchemeCode string `json:"scheme_code"`
	SchemePlan MutualFundSchemePlan `json:"scheme_plan"`
	Isin string `json:"isin"`
	AmfiCode string `json:"amfi_code"`
	FundType MutualFundFundType `json:"fund_type"`
	SchemeOption MutualFundSchemeOption `json:"scheme_option"`
	SchemeTypes MutualFundSchemeType `json:"scheme_types"`
	SchemeCategory MutualFundSchemeCategory `json:"scheme_category"`
	Ucc string `json:"ucc"`
	Amount string `json:"amount"`
	ClosingUnits string `json:"closing_units"`
	LienUnits string `json:"lien_units"`
	Nav string `json:"nav"`
	NavDate time.Time `json:"nav_date"`
	Type MutualFundTransactionType `json:"type"`
	OrderDate time.Time `json:"order_date"`
	ExecutionDate time.Time `json:"execution_date"`
	LockinFlag string `json:"lockin_flag"`
	LockinDays string `json:"lockin_days"`
	Mode MutualFundHoldingMode `json:"mode"`
	Narration string `json:"narration"`
}

// NewMutualFundTransaction instantiates a new MutualFundTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutualFundTransaction(id string, amc string, registrar string, schemeCode string, schemePlan MutualFundSchemePlan, isin string, amfiCode string, fundType MutualFundFundType, schemeOption MutualFundSchemeOption, schemeTypes MutualFundSchemeType, schemeCategory MutualFundSchemeCategory, ucc string, amount string, closingUnits string, lienUnits string, nav string, navDate time.Time, type_ MutualFundTransactionType, orderDate time.Time, executionDate time.Time, lockinFlag string, lockinDays string, mode MutualFundHoldingMode, narration string) *MutualFundTransaction {
	this := MutualFundTransaction{}
	this.Id = id
	this.Amc = amc
	this.Registrar = registrar
	this.SchemeCode = schemeCode
	this.SchemePlan = schemePlan
	this.Isin = isin
	this.AmfiCode = amfiCode
	this.FundType = fundType
	this.SchemeOption = schemeOption
	this.SchemeTypes = schemeTypes
	this.SchemeCategory = schemeCategory
	this.Ucc = ucc
	this.Amount = amount
	this.ClosingUnits = closingUnits
	this.LienUnits = lienUnits
	this.Nav = nav
	this.NavDate = navDate
	this.Type = type_
	this.OrderDate = orderDate
	this.ExecutionDate = executionDate
	this.LockinFlag = lockinFlag
	this.LockinDays = lockinDays
	this.Mode = mode
	this.Narration = narration
	return &this
}

// NewMutualFundTransactionWithDefaults instantiates a new MutualFundTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutualFundTransactionWithDefaults() *MutualFundTransaction {
	this := MutualFundTransaction{}
	return &this
}

// GetId returns the Id field value
func (o *MutualFundTransaction) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MutualFundTransaction) SetId(v string) {
	o.Id = v
}

// GetAmc returns the Amc field value
func (o *MutualFundTransaction) GetAmc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amc
}

// GetAmcOk returns a tuple with the Amc field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetAmcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amc, true
}

// SetAmc sets field value
func (o *MutualFundTransaction) SetAmc(v string) {
	o.Amc = v
}

// GetRegistrar returns the Registrar field value
func (o *MutualFundTransaction) GetRegistrar() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Registrar
}

// GetRegistrarOk returns a tuple with the Registrar field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetRegistrarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Registrar, true
}

// SetRegistrar sets field value
func (o *MutualFundTransaction) SetRegistrar(v string) {
	o.Registrar = v
}

// GetSchemeCode returns the SchemeCode field value
func (o *MutualFundTransaction) GetSchemeCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SchemeCode
}

// GetSchemeCodeOk returns a tuple with the SchemeCode field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetSchemeCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemeCode, true
}

// SetSchemeCode sets field value
func (o *MutualFundTransaction) SetSchemeCode(v string) {
	o.SchemeCode = v
}

// GetSchemePlan returns the SchemePlan field value
func (o *MutualFundTransaction) GetSchemePlan() MutualFundSchemePlan {
	if o == nil {
		var ret MutualFundSchemePlan
		return ret
	}

	return o.SchemePlan
}

// GetSchemePlanOk returns a tuple with the SchemePlan field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetSchemePlanOk() (*MutualFundSchemePlan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemePlan, true
}

// SetSchemePlan sets field value
func (o *MutualFundTransaction) SetSchemePlan(v MutualFundSchemePlan) {
	o.SchemePlan = v
}

// GetIsin returns the Isin field value
func (o *MutualFundTransaction) GetIsin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Isin
}

// GetIsinOk returns a tuple with the Isin field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetIsinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Isin, true
}

// SetIsin sets field value
func (o *MutualFundTransaction) SetIsin(v string) {
	o.Isin = v
}

// GetAmfiCode returns the AmfiCode field value
func (o *MutualFundTransaction) GetAmfiCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmfiCode
}

// GetAmfiCodeOk returns a tuple with the AmfiCode field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetAmfiCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmfiCode, true
}

// SetAmfiCode sets field value
func (o *MutualFundTransaction) SetAmfiCode(v string) {
	o.AmfiCode = v
}

// GetFundType returns the FundType field value
func (o *MutualFundTransaction) GetFundType() MutualFundFundType {
	if o == nil {
		var ret MutualFundFundType
		return ret
	}

	return o.FundType
}

// GetFundTypeOk returns a tuple with the FundType field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetFundTypeOk() (*MutualFundFundType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FundType, true
}

// SetFundType sets field value
func (o *MutualFundTransaction) SetFundType(v MutualFundFundType) {
	o.FundType = v
}

// GetSchemeOption returns the SchemeOption field value
func (o *MutualFundTransaction) GetSchemeOption() MutualFundSchemeOption {
	if o == nil {
		var ret MutualFundSchemeOption
		return ret
	}

	return o.SchemeOption
}

// GetSchemeOptionOk returns a tuple with the SchemeOption field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetSchemeOptionOk() (*MutualFundSchemeOption, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemeOption, true
}

// SetSchemeOption sets field value
func (o *MutualFundTransaction) SetSchemeOption(v MutualFundSchemeOption) {
	o.SchemeOption = v
}

// GetSchemeTypes returns the SchemeTypes field value
func (o *MutualFundTransaction) GetSchemeTypes() MutualFundSchemeType {
	if o == nil {
		var ret MutualFundSchemeType
		return ret
	}

	return o.SchemeTypes
}

// GetSchemeTypesOk returns a tuple with the SchemeTypes field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetSchemeTypesOk() (*MutualFundSchemeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemeTypes, true
}

// SetSchemeTypes sets field value
func (o *MutualFundTransaction) SetSchemeTypes(v MutualFundSchemeType) {
	o.SchemeTypes = v
}

// GetSchemeCategory returns the SchemeCategory field value
func (o *MutualFundTransaction) GetSchemeCategory() MutualFundSchemeCategory {
	if o == nil {
		var ret MutualFundSchemeCategory
		return ret
	}

	return o.SchemeCategory
}

// GetSchemeCategoryOk returns a tuple with the SchemeCategory field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetSchemeCategoryOk() (*MutualFundSchemeCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemeCategory, true
}

// SetSchemeCategory sets field value
func (o *MutualFundTransaction) SetSchemeCategory(v MutualFundSchemeCategory) {
	o.SchemeCategory = v
}

// GetUcc returns the Ucc field value
func (o *MutualFundTransaction) GetUcc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ucc
}

// GetUccOk returns a tuple with the Ucc field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetUccOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ucc, true
}

// SetUcc sets field value
func (o *MutualFundTransaction) SetUcc(v string) {
	o.Ucc = v
}

// GetAmount returns the Amount field value
func (o *MutualFundTransaction) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *MutualFundTransaction) SetAmount(v string) {
	o.Amount = v
}

// GetClosingUnits returns the ClosingUnits field value
func (o *MutualFundTransaction) GetClosingUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClosingUnits
}

// GetClosingUnitsOk returns a tuple with the ClosingUnits field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetClosingUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClosingUnits, true
}

// SetClosingUnits sets field value
func (o *MutualFundTransaction) SetClosingUnits(v string) {
	o.ClosingUnits = v
}

// GetLienUnits returns the LienUnits field value
func (o *MutualFundTransaction) GetLienUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LienUnits
}

// GetLienUnitsOk returns a tuple with the LienUnits field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetLienUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LienUnits, true
}

// SetLienUnits sets field value
func (o *MutualFundTransaction) SetLienUnits(v string) {
	o.LienUnits = v
}

// GetNav returns the Nav field value
func (o *MutualFundTransaction) GetNav() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nav
}

// GetNavOk returns a tuple with the Nav field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetNavOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nav, true
}

// SetNav sets field value
func (o *MutualFundTransaction) SetNav(v string) {
	o.Nav = v
}

// GetNavDate returns the NavDate field value
func (o *MutualFundTransaction) GetNavDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.NavDate
}

// GetNavDateOk returns a tuple with the NavDate field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetNavDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NavDate, true
}

// SetNavDate sets field value
func (o *MutualFundTransaction) SetNavDate(v time.Time) {
	o.NavDate = v
}

// GetType returns the Type field value
func (o *MutualFundTransaction) GetType() MutualFundTransactionType {
	if o == nil {
		var ret MutualFundTransactionType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetTypeOk() (*MutualFundTransactionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MutualFundTransaction) SetType(v MutualFundTransactionType) {
	o.Type = v
}

// GetOrderDate returns the OrderDate field value
func (o *MutualFundTransaction) GetOrderDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.OrderDate
}

// GetOrderDateOk returns a tuple with the OrderDate field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetOrderDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderDate, true
}

// SetOrderDate sets field value
func (o *MutualFundTransaction) SetOrderDate(v time.Time) {
	o.OrderDate = v
}

// GetExecutionDate returns the ExecutionDate field value
func (o *MutualFundTransaction) GetExecutionDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExecutionDate
}

// GetExecutionDateOk returns a tuple with the ExecutionDate field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetExecutionDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionDate, true
}

// SetExecutionDate sets field value
func (o *MutualFundTransaction) SetExecutionDate(v time.Time) {
	o.ExecutionDate = v
}

// GetLockinFlag returns the LockinFlag field value
func (o *MutualFundTransaction) GetLockinFlag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LockinFlag
}

// GetLockinFlagOk returns a tuple with the LockinFlag field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetLockinFlagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockinFlag, true
}

// SetLockinFlag sets field value
func (o *MutualFundTransaction) SetLockinFlag(v string) {
	o.LockinFlag = v
}

// GetLockinDays returns the LockinDays field value
func (o *MutualFundTransaction) GetLockinDays() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LockinDays
}

// GetLockinDaysOk returns a tuple with the LockinDays field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetLockinDaysOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockinDays, true
}

// SetLockinDays sets field value
func (o *MutualFundTransaction) SetLockinDays(v string) {
	o.LockinDays = v
}

// GetMode returns the Mode field value
func (o *MutualFundTransaction) GetMode() MutualFundHoldingMode {
	if o == nil {
		var ret MutualFundHoldingMode
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetModeOk() (*MutualFundHoldingMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *MutualFundTransaction) SetMode(v MutualFundHoldingMode) {
	o.Mode = v
}

// GetNarration returns the Narration field value
func (o *MutualFundTransaction) GetNarration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Narration
}

// GetNarrationOk returns a tuple with the Narration field value
// and a boolean to check if the value has been set.
func (o *MutualFundTransaction) GetNarrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Narration, true
}

// SetNarration sets field value
func (o *MutualFundTransaction) SetNarration(v string) {
	o.Narration = v
}

func (o MutualFundTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["amc"] = o.Amc
	}
	if true {
		toSerialize["registrar"] = o.Registrar
	}
	if true {
		toSerialize["scheme_code"] = o.SchemeCode
	}
	if true {
		toSerialize["scheme_plan"] = o.SchemePlan
	}
	if true {
		toSerialize["isin"] = o.Isin
	}
	if true {
		toSerialize["amfi_code"] = o.AmfiCode
	}
	if true {
		toSerialize["fund_type"] = o.FundType
	}
	if true {
		toSerialize["scheme_option"] = o.SchemeOption
	}
	if true {
		toSerialize["scheme_types"] = o.SchemeTypes
	}
	if true {
		toSerialize["scheme_category"] = o.SchemeCategory
	}
	if true {
		toSerialize["ucc"] = o.Ucc
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["closing_units"] = o.ClosingUnits
	}
	if true {
		toSerialize["lien_units"] = o.LienUnits
	}
	if true {
		toSerialize["nav"] = o.Nav
	}
	if true {
		toSerialize["nav_date"] = o.NavDate
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["order_date"] = o.OrderDate
	}
	if true {
		toSerialize["execution_date"] = o.ExecutionDate
	}
	if true {
		toSerialize["lockin_flag"] = o.LockinFlag
	}
	if true {
		toSerialize["lockin_days"] = o.LockinDays
	}
	if true {
		toSerialize["mode"] = o.Mode
	}
	if true {
		toSerialize["narration"] = o.Narration
	}
	return json.Marshal(toSerialize)
}

type NullableMutualFundTransaction struct {
	value *MutualFundTransaction
	isSet bool
}

func (v NullableMutualFundTransaction) Get() *MutualFundTransaction {
	return v.value
}

func (v *NullableMutualFundTransaction) Set(val *MutualFundTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableMutualFundTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableMutualFundTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutualFundTransaction(val *MutualFundTransaction) *NullableMutualFundTransaction {
	return &NullableMutualFundTransaction{value: val, isSet: true}
}

func (v NullableMutualFundTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutualFundTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


