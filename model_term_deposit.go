/*
My Data My Consent - Developer API

Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

API version: 1.0
Contact: support@mydatamyconsent.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/mydatamyconsent/sdk

import (
	"encoding/json"
)

// TermDeposit struct for TermDeposit
type TermDeposit struct {
	AccountNumber string `json:"account_number"`
	AccountType TermDepositAccountType `json:"account_type"`
	IssuerName string `json:"issuer_name"`
	IssuerLogoUrl string `json:"issuer_logo_url"`
	CurrentValue float64 `json:"current_value"`
	CurrencyCode string `json:"currency_code"`
	AccountDetails TermDepositAccountDetails `json:"account_details"`
}

// NewTermDeposit instantiates a new TermDeposit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTermDeposit(accountNumber string, accountType TermDepositAccountType, issuerName string, issuerLogoUrl string, currentValue float64, currencyCode string, accountDetails TermDepositAccountDetails) *TermDeposit {
	this := TermDeposit{}
	this.AccountNumber = accountNumber
	this.AccountType = accountType
	this.IssuerName = issuerName
	this.IssuerLogoUrl = issuerLogoUrl
	this.CurrentValue = currentValue
	this.CurrencyCode = currencyCode
	this.AccountDetails = accountDetails
	return &this
}

// NewTermDepositWithDefaults instantiates a new TermDeposit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTermDepositWithDefaults() *TermDeposit {
	this := TermDeposit{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value
func (o *TermDeposit) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *TermDeposit) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *TermDeposit) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetAccountType returns the AccountType field value
func (o *TermDeposit) GetAccountType() TermDepositAccountType {
	if o == nil {
		var ret TermDepositAccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *TermDeposit) GetAccountTypeOk() (*TermDepositAccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *TermDeposit) SetAccountType(v TermDepositAccountType) {
	o.AccountType = v
}

// GetIssuerName returns the IssuerName field value
func (o *TermDeposit) GetIssuerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value
// and a boolean to check if the value has been set.
func (o *TermDeposit) GetIssuerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuerName, true
}

// SetIssuerName sets field value
func (o *TermDeposit) SetIssuerName(v string) {
	o.IssuerName = v
}

// GetIssuerLogoUrl returns the IssuerLogoUrl field value
func (o *TermDeposit) GetIssuerLogoUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssuerLogoUrl
}

// GetIssuerLogoUrlOk returns a tuple with the IssuerLogoUrl field value
// and a boolean to check if the value has been set.
func (o *TermDeposit) GetIssuerLogoUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuerLogoUrl, true
}

// SetIssuerLogoUrl sets field value
func (o *TermDeposit) SetIssuerLogoUrl(v string) {
	o.IssuerLogoUrl = v
}

// GetCurrentValue returns the CurrentValue field value
func (o *TermDeposit) GetCurrentValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.CurrentValue
}

// GetCurrentValueOk returns a tuple with the CurrentValue field value
// and a boolean to check if the value has been set.
func (o *TermDeposit) GetCurrentValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentValue, true
}

// SetCurrentValue sets field value
func (o *TermDeposit) SetCurrentValue(v float64) {
	o.CurrentValue = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *TermDeposit) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *TermDeposit) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *TermDeposit) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetAccountDetails returns the AccountDetails field value
func (o *TermDeposit) GetAccountDetails() TermDepositAccountDetails {
	if o == nil {
		var ret TermDepositAccountDetails
		return ret
	}

	return o.AccountDetails
}

// GetAccountDetailsOk returns a tuple with the AccountDetails field value
// and a boolean to check if the value has been set.
func (o *TermDeposit) GetAccountDetailsOk() (*TermDepositAccountDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountDetails, true
}

// SetAccountDetails sets field value
func (o *TermDeposit) SetAccountDetails(v TermDepositAccountDetails) {
	o.AccountDetails = v
}

func (o TermDeposit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_number"] = o.AccountNumber
	}
	if true {
		toSerialize["account_type"] = o.AccountType
	}
	if true {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if true {
		toSerialize["issuer_logo_url"] = o.IssuerLogoUrl
	}
	if true {
		toSerialize["current_value"] = o.CurrentValue
	}
	if true {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if true {
		toSerialize["account_details"] = o.AccountDetails
	}
	return json.Marshal(toSerialize)
}

type NullableTermDeposit struct {
	value *TermDeposit
	isSet bool
}

func (v NullableTermDeposit) Get() *TermDeposit {
	return v.value
}

func (v *NullableTermDeposit) Set(val *TermDeposit) {
	v.value = val
	v.isSet = true
}

func (v NullableTermDeposit) IsSet() bool {
	return v.isSet
}

func (v *NullableTermDeposit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTermDeposit(val *TermDeposit) *NullableTermDeposit {
	return &NullableTermDeposit{value: val, isSet: true}
}

func (v NullableTermDeposit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTermDeposit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


